{"version":3,"file":"app.min.js","sources":["../../../node_modules/@lit/reactive-element/css-tag.js","../../../node_modules/@lit/reactive-element/reactive-element.js","../../../node_modules/lit-html/lit-html.js","../../../node_modules/lit-element/lit-element.js","../javascript/components/toast.ts","../javascript/components/propose.ts","../javascript/classes/dom.ts","../../../node_modules/idb/build/index.js","../javascript/classes/caches.ts","../javascript/classes/utils.ts","../javascript/components/confirm.ts","../javascript/components/recipes.ts","../javascript/components/ingredients.ts","../javascript/classes/commons.ts","../javascript/components/recipe.ts","../../../node_modules/@formkit/auto-animate/index.mjs","../javascript/classes/websocket.ts","../javascript/components/lists.ts","../javascript/components/header.ts","../javascript/components/login.ts","../javascript/components/categories.ts","../javascript/components/animatedSection.ts","../javascript/components/loader.ts","../javascript/components/loadingBlock.ts","../javascript/components/dishes.ts","../javascript/components/link.ts","../javascript/components/menu.ts","../javascript/components/register.ts","../javascript/classes/user.ts","../javascript/components/loggedUser.ts","../javascript/components/resetPassword.ts","../javascript/app.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,adoptStyles,css,getCompatibleStyle,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:r,getOwnPropertyNames:h,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),y={attribute:!0,type:String,converter:u,reflect:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class b extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=y){if(s.state&&(s.attribute=!1),this._$Ei(),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),r=this.getPropertyDescriptor(t,i,s);void 0!==r&&e(this.prototype,t,r)}}static getPropertyDescriptor(t,s,i){const{get:e,set:h}=r(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get(){return e?.call(this)},set(s){const r=e?.call(this);h.call(this,s),this.requestUpdate(t,r,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??y}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...h(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$EC(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const r=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==r?this.removeAttribute(e):this.setAttribute(e,r),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),r=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=r.fromAttribute(s,t.type),this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){if(i??=this.constructor.getPropertyOptions(t),!(i.hasChanged??f)(this[t],s))return;this.P(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$ET())}P(t,s,i){this._$AL.has(t)||this._$AL.set(t,s),!0===i.reflect&&this._$Em!==t&&(this._$Ej??=new Set).add(t)}async _$ET(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t)!0!==i.wrapped||this._$AL.has(s)||void 0===this[s]||this.P(s,this[s],i)}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EU()}catch(s){throw t=!1,this._$EU(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EU(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Ej&&=this._$Ej.forEach((t=>this._$EC(t,this[t]))),this._$EU()}updated(t){}firstUpdated(t){}}b.elementStyles=[],b.shadowRootOptions={mode:\"open\"},b[d(\"elementProperties\")]=new Map,b[d(\"finalized\")]=new Map,p?.({ReactiveElement:b}),(a.reactiveElementVersions??=[]).push(\"2.0.4\");export{b as ReactiveElement,u as defaultConverter,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst n=globalThis,c=n.trustedTypes,h=c?c.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,f=\"$lit$\",v=`lit$${Math.random().toFixed(9).slice(2)}$`,m=\"?\"+v,_=`<${m}>`,w=document,lt=()=>w.createComment(\"\"),st=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,g=Array.isArray,$=t=>g(t)||\"function\"==typeof t?.[Symbol.iterator],x=\"[ \\t\\n\\f\\r]\",T=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,E=/-->/g,k=/>/g,O=RegExp(`>|${x}(?:([^\\\\s\"'>=/]+)(${x}*=${x}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),S=/'/g,j=/\"/g,M=/^(?:script|style|textarea|title)$/i,P=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),ke=P(1),Oe=P(2),Se=P(3),R=Symbol.for(\"lit-noChange\"),D=Symbol.for(\"lit-nothing\"),V=new WeakMap,I=w.createTreeWalker(w,129);function N(t,i){if(!g(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==h?h.createHTML(i):i}const U=(t,i)=>{const s=t.length-1,e=[];let h,o=2===i?\"<svg>\":3===i?\"<math>\":\"\",n=T;for(let i=0;i<s;i++){const s=t[i];let r,l,c=-1,a=0;for(;a<s.length&&(n.lastIndex=a,l=n.exec(s),null!==l);)a=n.lastIndex,n===T?\"!--\"===l[1]?n=E:void 0!==l[1]?n=k:void 0!==l[2]?(M.test(l[2])&&(h=RegExp(\"</\"+l[2],\"g\")),n=O):void 0!==l[3]&&(n=O):n===O?\">\"===l[0]?(n=h??T,c=-1):void 0===l[1]?c=-2:(c=n.lastIndex-l[2].length,r=l[1],n=void 0===l[3]?O:'\"'===l[3]?j:S):n===j||n===S?n=O:n===E||n===k?n=T:(n=O,h=void 0);const u=n===O&&t[i+1].startsWith(\"/>\")?\" \":\"\";o+=n===T?s+_:c>=0?(e.push(r),s.slice(0,c)+f+s.slice(c)+v+u):s+v+(-2===c?i:u)}return[N(t,o+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),e]};class B{constructor({strings:t,_$litType$:i},s){let e;this.parts=[];let h=0,o=0;const n=t.length-1,r=this.parts,[l,a]=U(t,i);if(this.el=B.createElement(l,s),I.currentNode=this.el.content,2===i||3===i){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(e=I.nextNode())&&r.length<n;){if(1===e.nodeType){if(e.hasAttributes())for(const t of e.getAttributeNames())if(t.endsWith(f)){const i=a[o++],s=e.getAttribute(t).split(v),n=/([.?@])?(.*)/.exec(i);r.push({type:1,index:h,name:n[2],strings:s,ctor:\".\"===n[1]?Y:\"?\"===n[1]?Z:\"@\"===n[1]?q:G}),e.removeAttribute(t)}else t.startsWith(v)&&(r.push({type:6,index:h}),e.removeAttribute(t));if(M.test(e.tagName)){const t=e.textContent.split(v),i=t.length-1;if(i>0){e.textContent=c?c.emptyScript:\"\";for(let s=0;s<i;s++)e.append(t[s],lt()),I.nextNode(),r.push({type:2,index:++h});e.append(t[i],lt())}}}else if(8===e.nodeType)if(e.data===m)r.push({type:2,index:h});else{let t=-1;for(;-1!==(t=e.data.indexOf(v,t+1));)r.push({type:7,index:h}),t+=v.length-1}h++}}static createElement(t,i){const s=w.createElement(\"template\");return s.innerHTML=t,s}}function z(t,i,s=t,e){if(i===R)return i;let h=void 0!==e?s.o?.[e]:s.l;const o=st(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s.o??=[])[e]=h:s.l=h),void 0!==h&&(i=z(t,h._$AS(t,i.values),h,e)),i}class F{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??w).importNode(i,!0);I.currentNode=e;let h=I.nextNode(),o=0,n=0,r=s[0];for(;void 0!==r;){if(o===r.index){let i;2===r.type?i=new et(h,h.nextSibling,this,t):1===r.type?i=new r.ctor(h,r.name,r.strings,this,t):6===r.type&&(i=new K(h,this,t)),this._$AV.push(i),r=s[++n]}o!==r?.index&&(h=I.nextNode(),o++)}return I.currentNode=w,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class et{get _$AU(){return this._$AM?._$AU??this.v}constructor(t,i,s,e){this.type=2,this._$AH=D,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this.v=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=z(this,t,i),st(t)?t===D||null==t||\"\"===t?(this._$AH!==D&&this._$AR(),this._$AH=D):t!==this._$AH&&t!==R&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):$(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==D&&st(this._$AH)?this._$AA.nextSibling.data=t:this.T(w.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=B.createElement(N(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new F(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=V.get(t.strings);return void 0===i&&V.set(t.strings,i=new B(t)),i}k(t){g(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new et(this.O(lt()),this.O(lt()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this.v=t,this._$AP?.(t))}}class G{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=D,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=D}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=z(this,t,i,0),o=!st(t)||t!==this._$AH&&t!==R,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=z(this,e[s+n],i,n),r===R&&(r=this._$AH[n]),o||=!st(r)||r!==this._$AH[n],r===D?t=D:t!==D&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===D?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class Y extends G{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===D?void 0:t}}class Z extends G{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==D)}}class q extends G{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=z(this,t,i,0)??D)===R)return;const s=this._$AH,e=t===D&&s!==D||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==D&&(s===D||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class K{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){z(this,t)}}const si={M:f,P:v,A:m,C:1,L:U,R:F,D:$,V:z,I:et,H:G,N:Z,U:q,B:Y,F:K},Re=n.litHtmlPolyfillSupport;Re?.(B,et),(n.litHtmlVersions??=[]).push(\"3.2.0\");const Q=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new et(i.insertBefore(lt(),t),t,void 0,s??{})}return h._$AI(t),h};export{si as _$LH,ke as html,Se as mathml,R as noChange,D as nothing,Q as render,Oe as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as e}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as n,noChange as l}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */class h extends e{constructor(){super(...arguments),this.renderOptions={host:this},this.o=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const e=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this.o=n(e,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this.o?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this.o?.setConnected(!1)}render(){return l}}h._$litElement$=!0,h[\"finalized\"]=!0,globalThis.litElementHydrateSupport?.({LitElement:h});const f=globalThis.litElementPolyfillSupport;f?.({LitElement:h});const x={_$AK:(t,e,s)=>{t._$AK(e,s)},_$AL:t=>t._$AL};(globalThis.litElementVersions??=[]).push(\"4.1.0\");export{h as LitElement,x as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","import { html, render } from 'lit'\n\nexport default class Toast extends HTMLElement {\n    private messageProperty: string | null = null\n\n    static get observedAttributes(): [string] {\n        return ['visible']\n    }\n\n    get type(): string | null {\n        return this.getAttribute('type')\n    }\n\n    get message(): string | null {\n        return this.getAttribute('message')\n    }\n\n    get visible(): string | null {\n        return this.getAttribute('visible')\n    }\n\n    set visible(pValue: string | null) {\n        this.setAttribute('visible', <string>pValue)\n    }\n\n    connectedCallback(): void {\n        this.render()\n        setTimeout((): void => {\n            this.messageProperty = this.message\n            this.removeAttribute('message')\n            this.visible = 'visible'\n        }, 50)\n        setTimeout((): void => {\n            this.visible = ''\n            setTimeout((): void => this.remove(), 225)\n        }, 4000)\n    }\n\n    attributeChangedCallback(name: string, oldValue: string, newValue: string): void {\n        if (name === 'visible' && oldValue !== newValue) this.render()\n    }\n\n    private render(): void {\n        render(html` <div class=\"toast ${this.type} ${this.visible}\" role=\"alert\">${this.messageProperty}</div> `, this)\n    }\n}\n","import { html, render, TemplateResult } from 'lit'\n\nexport default class Propose extends HTMLElement {\n    private input: HTMLInputElement | null = null\n\n    static get observedAttributes(): [string] {\n        return ['list']\n    }\n\n    get list(): string | null {\n        return this.getAttribute('list')\n    }\n\n    set list(pValue: string | null) {\n        this.setAttribute('list', <string>pValue)\n    }\n\n    connectedCallback(): void {\n        this.input = <HTMLInputElement>this.closest('div')?.querySelector('input')\n        this.render()\n    }\n\n    attributeChangedCallback(name: string, oldValue: string, newValue: string): void {\n        if (name === 'list' && oldValue !== newValue) this.render()\n    }\n\n    private resetList(pText: string): void {\n        const input = <HTMLInputElement>this.input\n        if (pText) input.value = pText\n        input.focus()\n        this.dispatchEvent(new CustomEvent('listReset'))\n    }\n\n    private render(): void {\n        const list = this.list?.split(',').filter((pEntry: string): string => pEntry)\n        render(\n            list?.length\n                ? html`\n                      <div class=\"propose\">\n                          ${list.map(\n                              (pText: string): TemplateResult => html`\n                                  <a\n                                      href=\"#\"\n                                      @click=\"${(pEvent: PointerEvent): void => {\n                                          pEvent.preventDefault()\n                                          this.resetList(pText)\n                                      }}\"\n                                      @keyup=\"${(pEvent: Event): void => {\n                                          const keyboardEvent = <KeyboardEvent>pEvent\n                                          const link = <HTMLElement>pEvent.target\n                                          if (keyboardEvent.key === 'ArrowDown' && link.nextElementSibling) (<HTMLElement>link.nextElementSibling).focus()\n                                          if (keyboardEvent.key === 'ArrowUp' && link.previousElementSibling) (<HTMLElement>link.nextElementSibling).focus()\n                                          if (keyboardEvent.key === 'Enter') this.resetList(pText)\n                                      }}\"\n                                      >${pText}</a\n                                  >\n                              `\n                          )}\n                      </div>\n                  `\n                : html``,\n            this\n        )\n    }\n}\n","export class Dom {\n    private static currentElement: HTMLElement | SVGElement\n\n    static newDom(element: HTMLElement): typeof Dom {\n        return this.setCurrent(element)\n    }\n\n    static setCurrent(element: HTMLElement): typeof Dom {\n        this.currentElement = element\n        return this\n    }\n\n    static elt(name: string, classes = ''): typeof Dom {\n        const element = document.createElement(name)\n        if (classes) element.className = classes\n        this.currentElement.appendChild(element)\n        this.currentElement = element\n        return this\n    }\n\n    static svg(name: string): typeof Dom {\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n        svg.classList.add(name)\n        const use = document.createElementNS('http://www.w3.org/2000/svg', 'use')\n        svg.appendChild(use)\n        use.setAttribute('href', `#${name}`)\n        this.currentElement.appendChild(svg)\n        this.currentElement = svg\n        return this\n    }\n\n    static att(name: string, value: string): typeof Dom {\n        if (value !== null) this.currentElement.setAttribute(name, value)\n        return this\n    }\n\n    static text(text: string): typeof Dom {\n        if (text !== null) this.currentElement.appendChild(document.createTextNode(text))\n        return this\n    }\n\n    static listen(eventName: string, listener: EventListenerOrEventListenerObject): typeof Dom {\n        this.currentElement.addEventListener(eventName, listener, false)\n        return this\n    }\n\n    static up(): typeof Dom {\n        this.currentElement = this.currentElement.parentNode as HTMLElement\n        if (!this.currentElement) this.currentElement = document.body\n        return this\n    }\n\n    static clear(): typeof Dom {\n        this.currentElement.innerHTML = ''\n        return this\n    }\n\n    static current(): HTMLElement {\n        return this.currentElement as HTMLElement\n    }\n\n    static remove(): void {\n        this.currentElement.remove()\n    }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import { deleteDB, IDBPDatabase, IDBPObjectStore, openDB } from 'idb'\n\nconst indexedDBCaches: string[] = []\n\nexport class Caches {\n    static async set(forceIndexedDb: boolean, ...args: (string | Record<string, unknown> | Record<string, unknown>[])[]): Promise<void> {\n        for (let i = 0; i < args.length; i++) {\n            const maxStorageSize = 1024 * 1024 * 5 - JSON.stringify(sessionStorage).length\n            const storage = JSON.stringify(args[i + 1])\n            if ((storage && storage.length >= maxStorageSize) || forceIndexedDb) {\n                const key = <string>args[i]\n                const db = await openDB(<string>args[i], 1, { upgrade: (db: IDBPDatabase): IDBPObjectStore<unknown, ArrayLike<string>, string, 'versionchange'> => db.createObjectStore(<string>args[i]) })\n                indexedDBCaches.push(key)\n                const transaction = db.transaction(key, 'readwrite')\n                const objectStore = transaction.objectStore(key)\n                await objectStore.put(args[i + 1], key)\n                db.close()\n                return\n            }\n            if (i % 2 === 0) sessionStorage.setItem(args[i] as string, storage)\n        }\n    }\n\n    static async get(...args: string[]): Promise<Record<string, unknown> | Record<string, unknown>[]> {\n        let datas = []\n        for (const arg of args) {\n            if (indexedDBCaches.includes(arg)) {\n                const db = await openDB(arg, 1)\n                datas.push(await db.transaction(arg).objectStore(arg).get(arg))\n            } else datas.push(JSON.parse(<string>sessionStorage.getItem(arg)))\n        }\n        datas = datas.filter((pEntry): IDBPDatabase => pEntry)\n        return datas.length === 1 && datas.length === args.length ? datas[0] : datas.length && datas.length === args.length ? datas : null\n    }\n\n    static async clear(): Promise<void> {\n        for (const db of await indexedDB.databases()) {\n            indexedDB.deleteDatabase(db.name!)\n        }\n        sessionStorage.clear()\n    }\n}\n\nwindow.addEventListener('beforeunload', (): void => indexedDBCaches.forEach((dbName): Promise<void> => deleteDB(dbName)))\n","import { html, render, TemplateResult } from 'lit'\nimport { Dom } from './dom.js'\nimport { Caches } from './caches.js'\n\nexport class Utils {\n    static helpers({ confirmMessage = '', cbConfirm = null, cbCancel = null, isConfirmInit = true, loaderVisible = false }: Record<string, (() => void) | TemplateResult | string | boolean | null> = {}): void {\n        const confirm = cbConfirm as () => void\n        const cancel = cbCancel as () => void\n        render(\n            html`\n                <sc-loader ?visible=\"${loaderVisible}\"></sc-loader>\n                <sc-confirm .message=\"${confirmMessage}\" ?open=\"${isConfirmInit ? !isConfirmInit : Math.random()}\" @modalConfirm=\"${(): void => confirm()}\" @modalCancel=\"${(): void => cancel()}\"></sc-confirm>\n            `,\n            document.body\n        )\n    }\n\n    static loader(visible: boolean): void {\n        this.helpers({ loaderVisible: visible })\n    }\n\n    static confirm(message: string | TemplateResult, cbConfirm: () => void, cbCancel: (() => void) | null = null): void {\n        this.helpers({ confirmMessage: message, cbConfirm, cbCancel, isConfirmInit: false })\n    }\n\n    static toast(type: string, message: string): void {\n        const bd = Dom.newDom(document.body)\n        bd.elt('sc-toast').att('type', type).att('message', message)\n    }\n\n    static async request(pUrl: string, pMethod = 'GET', pOptions: Record<string, unknown> | null = {}, pReturnType = ''): Promise<string | number | Blob | Response | Record<string, unknown> | Record<string, unknown>[] | undefined> {\n        const response = await fetch(pUrl, { ...{ method: pMethod }, ...pOptions })\n        if (pReturnType === 'status' && pMethod === 'HEAD') return response.status\n        switch (pReturnType) {\n            case 'blob':\n                return response.blob()\n            case 'text':\n                return response.text()\n            case 'response':\n                return response\n            default:\n                return response.json()\n        }\n    }\n\n    static async getFragmentHtml(pUrl: string): Promise<Record<string, string>> {\n        const fragment = <Record<string, string>>((await Caches.get(pUrl)) || (await Utils.request(pUrl, 'POST')))\n        Caches.set(false, pUrl, fragment)\n        return fragment\n    }\n\n    static generateId(): number {\n        return new Date().getTime()\n    }\n\n    static getMousePosition(): { x: number; y: number } {\n        return { x: mouseX, y: mouseY }\n    }\n\n    static async getBase64FromFileReader(pFile: Blob): Promise<string | ArrayBuffer | null> {\n        return new Promise((resolve, reject): void => {\n            const reader = new FileReader()\n            reader.addEventListener('load', (): void => resolve(reader.result))\n            reader.addEventListener('error', (): ((reason?: unknown) => void) => reject)\n            reader.readAsDataURL(pFile)\n        })\n    }\n\n    static slugify(pStr: string): string {\n        const a = 'ãàáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/-,:;'\n        const b = 'aaaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh______'\n        const p = new RegExp(a.split('').join('|'), 'g')\n\n        return (\n            pStr\n                .toString()\n                .toLowerCase()\n                .replace(/\\s+/g, '_') // Replace spaces with _\n                .replace(p, (c): string => b.charAt(a.indexOf(c))) // Replace special chars\n                .replace(/&/g, '_and_') // Replace & with 'and'\n                // eslint-disable-next-line no-useless-escape\n                .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n                .replace(/--+/g, '_') // Replace multiple - with single _\n                .replace(/^-+/, '') // Trim - from start of text\n                .replace(/-+$/, '')\n        ) // Trim - from end of text\n    }\n\n    static urlToBase64(pUrl: string): Promise<string | ArrayBuffer | null> {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve): Promise<void> => {\n            const reader = new FileReader()\n            reader.onload = (): void => resolve(reader.result)\n            reader.readAsDataURL(<Blob>await this.request(pUrl, 'GET', null, 'blob'))\n        })\n    }\n\n    static async uploadFileAndGetUrl(pFile: Blob, pName: string | null = null): Promise<string> {\n        const formData = new FormData()\n        formData.append('file', pFile)\n        if (pName) formData.append('public_id', pName)\n        formData.append('upload_preset', 'sheetrpg')\n        return ((await Utils.request('https://api.cloudinary.com/v1_1/elendil/upload', 'POST', { body: formData })) as Record<string, unknown>)?.secure_url as string\n    }\n\n    static isValidHttpUrl(pStr: string): boolean {\n        const pattern = new RegExp(\n            '^(https?:\\\\/\\\\/)?' + // protocol\n                '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n                '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n                '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n                '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n                '(\\\\#[-a-z\\\\d_]*)?$', // fragment locator\n            'i'\n        )\n        return pattern.test(pStr)\n    }\n}\n\nlet mouseX = 0\nlet mouseY = 0\ndocument.body.addEventListener('pointermove', (pEvent): void => {\n    mouseX = pEvent.pageX + window.scrollX\n    mouseY = pEvent.pageY + window.scrollY\n})\n","import { html, render } from 'lit'\n\nexport default class Confirm extends HTMLElement {\n    private message = ''\n\n    static get observedAttributes(): [string] {\n        return ['open']\n    }\n\n    get open(): boolean {\n        return this.hasAttribute('open')\n    }\n\n    set open(pValue) {\n        if (pValue) this.setAttribute('open', '')\n        else this.removeAttribute('open')\n    }\n\n    connectedCallback(): void {\n        this.render()\n        this.style.display = 'none'\n    }\n\n    attributeChangedCallback(name: string, oldValue: string, newValue: string): void {\n        if (name === 'open' && oldValue !== newValue) {\n            this.style.display = ''\n            setTimeout((): void => this.render(), 50)\n        }\n    }\n\n    private closeDialog(): void {\n        this.open = false\n        setTimeout((): void => {\n            this.style.display = 'none'\n            this.message = ''\n            this.render()\n        }, 225)\n    }\n\n    private render(): void {\n        render(\n            html`\n                <dialog ?open=\"${this.open}\">\n                    <article>\n                        ${this.message}\n                        <footer>\n                            <a\n                                href=\"#\"\n                                role=\"button\"\n                                class=\"secondary\"\n                                @click=\"${(pEvent: PointerEvent): void => {\n                                    pEvent.preventDefault()\n                                    this.dispatchEvent(new CustomEvent('modalCancel'))\n                                    this.closeDialog()\n                                }}\"\n                                >Cancel</a\n                            >\n                            <a\n                                href=\"#\"\n                                role=\"button\"\n                                @click=\"${(pEvent: PointerEvent): void => {\n                                    pEvent.preventDefault()\n                                    this.dispatchEvent(new CustomEvent('modalConfirm'))\n                                    this.closeDialog()\n                                }}\"\n                                >Confirm</a\n                            >\n                        </footer>\n                    </article>\n                </dialog>\n            `,\n            this\n        )\n    }\n}\n","import { html, render, TemplateResult } from 'lit'\nimport { Utils } from '../classes/utils.js'\nimport { Caches } from '../classes/caches.js'\nimport { HTMLElementEvent, TRecipe } from '../types.js'\n\nexport default class Recipes extends HTMLElement {\n    private savedRecipes!: TRecipe[]\n    private recipes!: TRecipe[]\n\n    static get observedAttributes(): [string] {\n        return ['choiceMode']\n    }\n\n    get choiceMode(): string | null {\n        return this.getAttribute('choiceMode')\n    }\n\n    set choiceMode(pValue) {\n        if (pValue) this.setAttribute('choiceMode', pValue)\n        else this.removeAttribute('choiceMode')\n    }\n\n    async connectedCallback(): Promise<void> {\n        this.savedRecipes = await this.getRecipes()\n        this.search()\n        this.querySelector('input')?.addEventListener('keyup', (pEvent: KeyboardEvent): void => this.search((pEvent.target as HTMLInputElement).value))\n    }\n\n    attributeChangedCallback(name: string, oldValue: string, newValue: string): void {\n        if (name === 'choiceMode' && oldValue !== newValue) this.render()\n    }\n\n    private async getRecipes(): Promise<TRecipe[]> {\n        const recipes = ((await Caches.get('recipes')) || (await Utils.request('/db', 'POST', { body: '{ \"getRecipes\": \"\" }' }))) as TRecipe[]\n        await Caches.set(false, 'recipes', recipes)\n        return recipes\n    }\n\n    private removeRecipe(pRecipe: TRecipe): void {\n        Utils.confirm(html`<h3>Voulez-vous vraiment supprimer ?</h3>`, async (): Promise<void> => {\n            this.savedRecipes = (await Utils.request('/db', 'POST', { body: `{ \"removeRecipe\": \"${pRecipe._id}\" }` })) as TRecipe[]\n            await Caches.set(false, 'recipes', this.savedRecipes)\n            this.search()\n            Utils.toast('success', 'Recette supprimée')\n        })\n    }\n\n    private search(pValue: string | null = null): void {\n        this.recipes = (\n            pValue && Array.isArray(this.savedRecipes)\n                ? this.savedRecipes.filter((pRecipe): boolean => pRecipe.title.toLowerCase().includes(pValue.toLowerCase()))\n                : !Array.isArray(this.savedRecipes) && Object.keys(this.savedRecipes).length\n                  ? [this.savedRecipes]\n                  : this.savedRecipes\n        ).sort((a, b): number => a.title.localeCompare(b.title))\n        this.render()\n    }\n\n    private render(): void {\n        let choices: string[] = []\n        render(\n            html`\n                ${!this.choiceMode ? html`<h2>Liste des recettes</h2>` : ''}\n                <label>\n                    <input type=\"search\" name=\"search\" placeholder=\"Rechercher\" />\n                </label>\n                <aside>\n                    <nav>\n                        <ul>\n                            ${!this.recipes.length\n                                ? html` <li>Aucun résultat</li>`\n                                : this.recipes.map(\n                                      (pRecipe): TemplateResult => html`\n                                          <li>\n                                              ${this.choiceMode\n                                                  ? html`\n                                                        <label for=\"${pRecipe.slug}\">\n                                                            <input\n                                                                type=\"${this.choiceMode}\"\n                                                                id=\"${pRecipe.slug}\"\n                                                                name=\"${this.choiceMode === 'checkbox' ? pRecipe.slug : 'recipe'}\"\n                                                                value=\"${pRecipe.title}\"\n                                                                @change=\"${(pEvent: HTMLElementEvent<HTMLInputElement>): void => {\n                                                                    const value = pRecipe._id.toString()\n                                                                    if (pEvent.target.checked) choices.push(value)\n                                                                    else choices = choices.filter((pChoice): boolean => pChoice !== value)\n                                                                    let detail: { choices: string[]; title?: string } = { choices }\n                                                                    if (this.choiceMode === 'radio') {\n                                                                        detail = { ...detail, title: pRecipe.title }\n                                                                    }\n                                                                    document.body.dispatchEvent(new CustomEvent('modalConfirm', { detail }))\n                                                                }}\"\n                                                            />\n                                                            ${pRecipe.title}\n                                                        </label>\n                                                    `\n                                                  : html`\n                                                        <div>\n                                                            <span>${pRecipe.title}</span>\n                                                            <sc-link role=\"button\" class=\"edit\" href=\"/recipe/edit/${pRecipe.slug}\">\n                                                                <svg class=\"edit\">\n                                                                    <use href=\"#edit\"></use>\n                                                                </svg>\n                                                                <span>Éditer</span>\n                                                            </sc-link>\n                                                            <button type=\"button\" class=\"remove\" @click=\"${(): void => this.removeRecipe(pRecipe)}\">\n                                                                <svg class=\"remove\">\n                                                                    <use href=\"#remove\"></use>\n                                                                </svg>\n                                                                <span>Supprimer</span>\n                                                            </button>\n                                                        </div>\n                                                        <div class=\"ingredients\">${pRecipe.ingredients?.map((pIngredient, pIndex): string => pIngredient.title + (pRecipe.ingredients.length - 1 === pIndex ? '' : ', '))}</div>\n                                                    `}\n                                          </li>\n                                      `\n                                  )}\n                        </ul>\n                    </nav>\n                </aside>\n            `,\n            this\n        )\n    }\n}\n","import { html, render, TemplateResult } from 'lit'\nimport { Utils } from '../classes/utils.js'\nimport { Caches } from '../classes/caches.js'\nimport { HTMLElementEvent, TCategory, TIngredient } from '../types.js'\n\nexport default class Ingredients extends HTMLElement {\n    private savedIngredients: TIngredient[] = []\n    private editMode: string | null = null\n    private ingredients: TIngredient[] = []\n    private categories: TCategory[] = []\n\n    async connectedCallback(): Promise<void> {\n        const response = ((await Caches.get('ingredients', 'categories')) || (await Utils.request('/db', 'POST', { body: '[{ \"getIngredients\": \"\" }, { \"getCategories\": \"\" }]' }))) as unknown as [TIngredient[], TCategory[]]\n        await Caches.set(false, 'ingredients', response[0], 'categories', response[1])\n        this.savedIngredients = response[0]\n        this.categories = response[1]\n        this.search()\n        this.querySelector('input')?.addEventListener('keyup', (pEvent: KeyboardEvent): void => this.search((pEvent.target as HTMLInputElement).value))\n    }\n\n    private async editAndSaveIngredient(id: string, title: string): Promise<void> {\n        this.savedIngredients = (await Utils.request('/db', 'POST', { body: `{ \"setIngredients\": { \"ingredients\": [ { \"title\": \"${title}\", \"id\": \"${id}\" } ] } }` })) as TIngredient[]\n        await Caches.set(false, 'ingredients', this.savedIngredients)\n        this.resetMode()\n    }\n\n    private resetMode(): void {\n        this.editMode = null\n        this.search(this.querySelector('input')?.value)\n    }\n\n    private async removeIngredient(id: string): Promise<void> {\n        Utils.confirm(html`<h3>Voulez-vous vraiment supprimer ?</h3>`, async (): Promise<void> => {\n            this.savedIngredients = (await Utils.request('/db', 'POST', { body: `{ \"removeIngredient\": \"${id}\" }` })) as TIngredient[]\n            await Caches.set(false, 'ingredients', this.savedIngredients)\n            this.search(this.querySelector('input')?.value)\n            Utils.toast('success', 'Ingrédient supprimé')\n        })\n    }\n\n    private setCategory(ingredientId: string, ingredientTitle: string, selectedCategoryId: string): void {\n        let categoryId: string\n        document.body.addEventListener('modalConfirm', (pEvent): void => {\n            categoryId = (pEvent as CustomEvent).detail.id\n        })\n        Utils.confirm(html` <sc-categories choiceMode=\"${selectedCategoryId}\" /> `, async (): Promise<void> => {\n            this.savedIngredients = (await Utils.request('/db', 'POST', { body: `{ \"setIngredients\": { \"ingredients\": [ { \"title\": \"${ingredientTitle}\", \"id\": \"${ingredientId}\", \"category\": \"${categoryId}\" } ] } }` })) as TIngredient[]\n            await Caches.set(false, 'ingredients', this.savedIngredients)\n            this.search()\n        })\n    }\n\n    private search(pValue: string | null = null): void {\n        this.ingredients = (pValue ? this.savedIngredients.filter((pIngredient): boolean => pIngredient.title.toLowerCase().includes(pValue.toLowerCase())) : this.savedIngredients).sort((a, b): number => a.title.localeCompare(b.title))\n        this.render()\n    }\n\n    private render(): void {\n        render(\n            html`\n                <h2>Liste des ingrédients</h2>\n                <label>\n                    <input type=\"search\" name=\"search\" placeholder=\"Rechercher\" />\n                </label>\n                <aside>\n                    <nav>\n                        <ul>\n                            ${!this.ingredients.length\n                                ? html` <li>Aucun résultat</li>`\n                                : this.ingredients.map((pIngredient): TemplateResult => {\n                                      const ingredientTitle = pIngredient.title\n                                      const category = this.categories.map((pCategory): string | false => pCategory._id.toString() === pIngredient.category && pCategory.title).filter((pCategory): string | false => pCategory)[0]\n                                      const ingredientId = pIngredient._id\n                                      return html`\n                                          <li>\n                                              <div>\n                                                  ${this.editMode === ingredientId.toString()\n                                                      ? html`\n                                                            <input\n                                                                name=\"${ingredientId}\"\n                                                                required\n                                                                type=\"text\"\n                                                                value=\"${ingredientTitle}\"\n                                                                @keyup=\"${(pEvent: HTMLElementEvent<HTMLInputElement>): void => {\n                                                                    if (pEvent.key === 'Enter') this.editAndSaveIngredient(ingredientId.toString(), pEvent.target.value)\n                                                                    if (pEvent.key === 'Escape') this.resetMode()\n                                                                }}\"\n                                                            />\n                                                        `\n                                                      : html` <span>${ingredientTitle}${category ? html` (${category})` : ''}</span> `}\n                                                  ${this.editMode === ingredientId.toString()\n                                                      ? html`\n                                                            <button\n                                                                class=\"valid\"\n                                                                @click=\"${(pEvent: HTMLElementEvent<HTMLButtonElement>): Promise<void> =>\n                                                                    this.editAndSaveIngredient(ingredientId.toString(), (pEvent.target.closest('button')?.previousElementSibling as HTMLInputElement)?.value)}\"\n                                                            >\n                                                                <svg class=\"valid\">\n                                                                    <use href=\"#valid\"></use>\n                                                                </svg>\n                                                                <span>Valider</span>\n                                                            </button>\n                                                        `\n                                                      : html`\n                                                            <button\n                                                                class=\"edit\"\n                                                                @click=\"${(): void => {\n                                                                    this.editMode = ingredientId.toString()\n                                                                    this.search(this.querySelector('input')?.value)\n                                                                }}\"\n                                                            >\n                                                                <svg class=\"edit\">\n                                                                    <use href=\"#edit\"></use>\n                                                                </svg>\n                                                                <span>Modifier</span>\n                                                            </button>\n                                                        `}\n                                                  ${this.editMode === ingredientId.toString()\n                                                      ? html`\n                                                            <button type=\"button\" class=\"undo\" @click=\"${(): void => this.resetMode()}\">\n                                                                <svg class=\"undo\">\n                                                                    <use href=\"#undo\"></use>\n                                                                </svg>\n                                                                <span>Annuler</span>\n                                                            </button>\n                                                        `\n                                                      : html`\n                                                            <button type=\"button\" class=\"remove\" @click=\"${(): Promise<void> => this.removeIngredient(ingredientId.toString())}\">\n                                                                <svg class=\"remove\">\n                                                                    <use href=\"#remove\"></use>\n                                                                </svg>\n                                                                <span>Supprimer</span>\n                                                            </button>\n                                                            <button type=\"button\" class=\"setCategory\" @click=\"${(): void => this.setCategory(ingredientId.toString(), ingredientTitle, pIngredient.category)}\">\n                                                                <svg class=\"setCategory\">\n                                                                    <use href=\"#setCategory\"></use>\n                                                                </svg>\n                                                                <span>Associer une catégorie</span>\n                                                            </button>\n                                                        `}\n                                              </div>\n                                          </li>\n                                      `\n                                  })}\n                        </ul>\n                    </nav>\n                </aside>\n            `,\n            this\n        )\n    }\n}\n","import { html, render } from 'lit'\nimport { HTMLElementEvent, TIngredient, TListIngredient } from '../types.js'\n\nexport class Commons {\n    static strings = {\n        ordered: 'Acheté',\n        gram: 'Gr',\n        centiliter: 'Cl',\n        number: 'Nb',\n        gramComplete: 'Gramme',\n        centiliterComplete: 'Centilitre',\n        numberComplete: 'Nombre',\n    }\n\n    static propositions: string[]\n    static savedIngredients: TIngredient[]\n\n    static renderAddIngredientInDialog(ingredient: TListIngredient, isReset = false): void {\n        const element = document.querySelector('sc-confirm > dialog > article')\n        render(\n            isReset\n                ? ''\n                : html`\n                      <div class=\"addIngredient\">\n                          <input\n                              autocomplete=\"off\"\n                              class=\"ingredient\"\n                              name=\"ingredient\"\n                              required\n                              type=\"text\"\n                              value=\"${ingredient?.title}\"\n                              @input=\"${(pEvent: HTMLElementEvent<HTMLInputElement>): boolean => document.body.dispatchEvent(new CustomEvent('modalConfirm', { detail: { event: pEvent } }))}\"\n                              @keyup=\"${(pEvent: HTMLElementEvent<HTMLInputElement>): void => {\n                                  if (pEvent.key !== 'Enter') {\n                                      Commons.managePropositions(pEvent)\n                                      this.renderAddIngredientInDialog(ingredient, isReset)\n                                  }\n                              }}\"\n                          />\n                          <sc-propose\n                              list=\"${Commons.propositions}\"\n                              @listReset=\"${(): void => {\n                                  Commons.setPropositions()\n                                  this.renderAddIngredientInDialog(ingredient, isReset)\n                              }}\"\n                          ></sc-propose>\n                      </div>\n                      <input\n                          autocomplete=\"off\"\n                          class=\"size\"\n                          name=\"size\"\n                          type=\"number\"\n                          value=\"${ingredient?.size}\"\n                          @change=\"${(pEvent: HTMLElementEvent<HTMLInputElement>): boolean => document.body.dispatchEvent(new CustomEvent('modalConfirm', { detail: { event: pEvent } }))}\"\n                      />\n                      <select class=\"unit\" name=\"'unit'\" @input=\"${(pEvent: HTMLElementEvent<HTMLInputElement>): boolean => document.body.dispatchEvent(new CustomEvent('modalConfirm', { detail: { event: pEvent } }))}\">\n                          <option class=\"nb\" ?selected=\"${ingredient?.unit === 'nb'}\" value=\"nb\">${this.strings.numberComplete}</option>\n                          <option class=\"g\" ?selected=\"${ingredient?.unit === 'g'}\" value=\"g\">${this.strings.gramComplete}</option>\n                          <option class=\"cl\" ?selected=\"${ingredient?.unit === 'cl'}\" value=\"cl\">${this.strings.centiliterComplete}</option>\n                      </select>\n                  `,\n            element as HTMLElement,\n            { renderBefore: element?.querySelector('footer') }\n        )\n    }\n\n    static setPropositions(pValue: string | null = null): void {\n        if (!this.savedIngredients || !this.savedIngredients.length) return\n        this.propositions = pValue ? this.savedIngredients.map((pIngredient: TIngredient): string => pIngredient.title).filter((pIngredient: string): boolean => pIngredient.toLowerCase().includes(pValue.toLowerCase())) : []\n    }\n\n    static clearPropositionsOnBackgroundClick(pCb: () => void): void {\n        document.body.addEventListener('click', (pEvent: MouseEvent): void => {\n            if (!(pEvent.target as HTMLElement).closest('div.propose')) {\n                this.setPropositions()\n                pCb()\n            }\n        })\n    }\n\n    static managePropositions(pEvent: HTMLElementEvent<HTMLInputElement>): void {\n        const input = pEvent.target\n        this.setPropositions(input.value)\n        if (pEvent.key === 'ArrowDown' && this.propositions) (input.closest('article')?.querySelector('sc-propose a:first-child') as HTMLElement).focus()\n        else if (input.value.length === 0 || (this.propositions.length && this.propositions.length === 1 && this.propositions[0].toLowerCase() === input.value?.toLowerCase())) {\n            if (this.propositions[0]?.toLowerCase() === input.value?.toLowerCase()) input.value = this.propositions[0]\n            this.setPropositions()\n        }\n    }\n}\n\nCommons.savedIngredients = []\n","import { html, render, TemplateResult } from 'lit'\nimport { Utils } from '../classes/utils.js'\nimport { Commons } from '../classes/commons.js'\nimport { Caches } from '../classes/caches.js'\nimport { HTMLElementEvent, TIngredient, TListIngredient, TRecipe } from '../types.js'\n\nexport default class Recipe extends HTMLElement {\n    title = 'Ajouter une recette'\n    private submitButtonName: string = 'Ajouter'\n    private isInEditMode: boolean = false\n    private slug: string = ''\n    private currentRecipe!: TRecipe\n    private currentRecipeTitle: string = ''\n    private currentRecipeId!: string\n    private newIngredients: TListIngredient[] = []\n\n    async connectedCallback(): Promise<void> {\n        Commons.clearPropositionsOnBackgroundClick((): void => this.render())\n        const splitUrl = location.pathname.split('/')\n        this.isInEditMode = splitUrl.includes('edit')\n        if (this.isInEditMode) {\n            this.slug = splitUrl[splitUrl.length - 1]\n            this.currentRecipe = ((await Caches.get(`${this.slug}`)) || (await Utils.request('/db', 'POST', { body: `{ \"getRecipes\": { \"slug\": \"${this.slug}\" } }` }))) as TRecipe\n            await Caches.set(false, this.slug, this.currentRecipe)\n            if (Array.isArray(this.currentRecipe)) location.href = location.origin + '/404.html'\n            this.currentRecipeTitle = this.currentRecipe.title\n            this.currentRecipeId = this.currentRecipe._id.toString()\n            this.submitButtonName = 'Modifier'\n            this.title = 'Modifier une recette'\n            this.newIngredients = this.currentRecipe.ingredients\n        } else this.newIngredients = []\n        Commons.savedIngredients = ((await Caches.get('ingredients')) || (await Utils.request('/db', 'POST', { body: '{ \"getIngredients\": \"\" }' }))) as unknown as TIngredient[]\n        await Caches.set(false, 'ingredients', Commons.savedIngredients)\n        document.body.style.display = 'flex'\n        this.render()\n        this.setFormListener()\n    }\n\n    private setFormListener(): void {\n        const form = this.querySelector('form')\n        form?.addEventListener('keypress', async (pEvent): Promise<void> => {\n            if (pEvent.key === 'Enter') pEvent.preventDefault()\n        })\n        form?.addEventListener('submit', async (pEvent): Promise<void> => {\n            pEvent.preventDefault()\n            try {\n                const plainFormData = Object.fromEntries(new FormData(form).entries())\n                const id = plainFormData.id\n                const formKeys = Object.keys(plainFormData)\n                const ingredients = formKeys.reduce((pIngredients: Partial<TListIngredient>[], pKey): Partial<TListIngredient>[] => {\n                    if (pKey !== 'recipe' && pKey !== 'id') {\n                        if (!pIngredients.some((pIngredient: Partial<TIngredient>): boolean => pIngredient.title === plainFormData[pKey]) && pKey.includes('ingredient')) pIngredients.push({ title: plainFormData[pKey] as string })\n                        if (!pKey.includes('ingredient')) {\n                            const splitKey = pKey.split('_')\n                            const key = Number(splitKey[1]) === 0 ? pIngredients.length - 1 : Number(splitKey[1]) - 1\n                            pIngredients[key][splitKey[0] as keyof TListIngredient] = plainFormData[pKey] as unknown as undefined\n                        }\n                    }\n                    return pIngredients\n                }, [])\n                if (this.isInEditMode) {\n                    this.currentRecipe.ingredients = ingredients as TListIngredient[]\n                    await Caches.set(false, this.slug, this.currentRecipe)\n                }\n                Utils.loader(true)\n                const response = (await Utils.request('/db', 'POST', { body: `{ \"setRecipe\": { \"title\": \"${plainFormData.recipe}\", ${id ? `\"id\": \"${id}\",` : ''} \"ingredients\": ${JSON.stringify(ingredients)}} }` })) as [\n                    TRecipe,\n                    TIngredient[],\n                ]\n                await Caches.set(false, 'recipes', response[0], 'ingredients', response[1])\n                Utils.loader(false)\n                if (this.isInEditMode) location.href = '/recipes'\n                else {\n                    this.newIngredients = []\n                    document.querySelectorAll('input').forEach((input): void => {\n                        input.value = ''\n                    })\n                    Utils.toast('success', 'Recette enregistrée')\n                    Commons.savedIngredients = response[1]\n                    this.render()\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        })\n    }\n\n    private addOrEditIngredient(pEvent: HTMLElementEvent<HTMLInputElement>, pIndex: number | undefined = undefined): void {\n        const parent = pEvent.target.closest('article')\n        const input = parent?.querySelector('.ingredient') as HTMLInputElement\n        const sizeInput = parent?.querySelector('.size') as HTMLInputElement\n        const unitSelect = parent?.querySelector('.unit') as HTMLInputElement\n        if (input?.value) {\n            const ingredient: Omit<TListIngredient, 'category'> = { title: input.value, size: sizeInput.value, unit: unitSelect.value }\n            if (pIndex !== undefined && pIndex !== null) this.newIngredients[pIndex] = ingredient as TListIngredient\n            else this.newIngredients.push(ingredient as TListIngredient)\n            this.render()\n        }\n    }\n\n    private removeIngredient(pIndex: number): void {\n        Commons.setPropositions()\n        this.newIngredients.splice(pIndex, 1)\n        this.render()\n    }\n\n    private openEditListIngredient(pIngredient: TListIngredient | null = null, pIndex: number | null = null): void {\n        let event: HTMLElementEvent<HTMLInputElement>\n        document.body.addEventListener('modalConfirm', (pEvent): void => {\n            event = (pEvent as CustomEvent).detail.event\n        })\n        Utils.confirm(\n            html``,\n            async (): Promise<void> => {\n                if (pIndex !== undefined) this.addOrEditIngredient(event, pIndex as number)\n                else this.addOrEditIngredient(event)\n                Commons.renderAddIngredientInDialog(pIngredient as TListIngredient, true)\n            },\n            (): void => Commons.renderAddIngredientInDialog(pIngredient as TListIngredient, true)\n        )\n        Commons.renderAddIngredientInDialog(pIngredient as TListIngredient)\n    }\n\n    private render(): void {\n        render(\n            html`\n\t\t\t<h2>${this.title}</h2>\n\t\t\t<form>\n\t\t\t\t<label>\n\t\t\t\t\t<span>Nom</span>\n\t\t\t\t\t<input autocomplete=\"off\" name=\"recipe\" required type=\"text\" value=\"${this.currentRecipeTitle || ''}\">\n\t\t\t\t\t<input name=\"id\" type=\"hidden\" value=\"${this.currentRecipeId || ''}\">\n\t\t\t\t</label>\n\t\t\t\t<fieldset class=\"ingredients\">\n\t\t\t\t\t<div class=\"title\">\n\t\t\t\t\t\t<legend>Ingrédients</legend>\n\t\t\t\t\t\t<button type=\"button\" class=\"add\" @click=\"${(): void => this.openEditListIngredient()}\">\n\t\t\t\t\t\t\t<svg class=\"add\">\n\t\t\t\t\t\t\t\t<use href=\"#add\"></use>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t<span>Ajouter un ingrédient</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t${this.newIngredients?.map(\n                        (pIngredient, pIndex): TemplateResult => html`\n                            <div class=\"grid\">\n                                <span>${pIngredient?.title || pIngredient}${pIngredient?.size ? ` (${pIngredient?.size}${pIngredient?.unit && pIngredient?.unit !== 'nb' ? ` ${pIngredient?.unit}` : ''})` : ''}</span>\n                                <input name=\"ingredient_${pIndex + 1}\" type=\"hidden\" value=\"${pIngredient?.title || pIngredient}\" />\n                                <input name=\"size_${pIndex + 1}\" type=\"hidden\" value=\"${pIngredient?.size || ''}\" />\n                                <input name=\"unit_${pIndex + 1}\" type=\"hidden\" value=\"${pIngredient?.unit || ''}\" />\n                                <button type=\"button\" class=\"edit\" @click=\"${(): void => this.openEditListIngredient(pIngredient, pIndex)}\">\n                                    <svg class=\"edit\">\n                                        <use href=\"#edit\"></use>\n                                    </svg>\n                                    <span>Supprimer un ingrédient</span>\n                                </button>\n                                <button type=\"button\" class=\"remove\" @click=\"${(): void => this.removeIngredient(pIndex)}\">\n                                    <svg class=\"minus\">\n                                        <use href=\"#minus\"></use>\n                                    </svg>\n                                    <span>Supprimer un ingrédient</span>\n                                </button>\n                            </div>\n                        `\n                    )}\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t\t<button type=\"submit\">\n\t\t\t\t\t<span>${this.submitButtonName}</span>\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t`,\n            this\n        )\n    }\n}\n","/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * The root’s XY scroll positions.\n */\nlet scrollX = 0;\nlet scrollY = 0;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Used to sign an element as being \"new\". When an element is removed from the\n * dom, but may cycle back in we can sign it with new to ensure the next time\n * it is recognized we consider it new.\n */\nconst NEW = \"__aa_new\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${-1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n */\nfunction updatePos(el) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = isPlugin(optionsOrPlugin) ? 500 : optionsOrPlugin.duration;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        try {\n            await (currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.finished);\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n        catch {\n            // ignore errors as the `.finished` promise is rejected when animations were cancelled\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * The mutation observer responsible for watching each root element.\n */\nlet mutations;\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * Ensure the browser is supported.\n */\nconst supportedBrowser = typeof window !== \"undefined\" && \"ResizeObserver\" in window;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (supportedBrowser) {\n    root = document.documentElement;\n    mutations = new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    window.addEventListener(\"scroll\", () => {\n        scrollY = window.scrollY;\n        scrollX = window.scrollX;\n    });\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child) {\n                        return false;\n                    }\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child) {\n                        return false;\n                    }\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a;\n    const isMounted = el.isConnected;\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (animations.has(el)) {\n        (_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.cancel();\n    }\n    if (NEW in el) {\n        add(el);\n    }\n    else if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the scroll offset of elements\n * @param el - Element\n * @returns\n */\nfunction getScrollOffset(el) {\n    let p = el.parentElement;\n    while (p) {\n        if (p.scrollLeft || p.scrollTop) {\n            return { x: p.scrollLeft, y: p.scrollTop };\n        }\n        p = p.parentElement;\n    }\n    return { x: 0, y: 0 };\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    const { x, y } = getScrollOffset(el);\n    return {\n        top: rect.top + y,\n        left: rect.left + x,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * Always return tuple to provide consistent interface\n */\nfunction getPluginTuple(pluginReturn) {\n    if (Array.isArray(pluginReturn))\n        return pluginReturn;\n    return [pluginReturn];\n}\n/**\n * Determine if config is plugin\n */\nfunction isPlugin(config) {\n    return typeof config === \"function\";\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        const deltaX = oldCoords.left - newCoords.left;\n        const deltaY = oldCoords.top - newCoords.top;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaX}px, ${deltaY}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    if (NEW in el)\n        delete el[NEW];\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"add\", newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Clean up after removing an element from the dom.\n * @param el - Element being removed\n * @param styles - Optional styles that should be removed from the element.\n */\nfunction cleanUp(el, styles) {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    setTimeout(() => {\n        if (DEL in el)\n            delete el[DEL];\n        Object.defineProperty(el, NEW, { value: true, configurable: true });\n        if (styles && el instanceof HTMLElement) {\n            for (const style in styles) {\n                el.style[style] = \"\";\n            }\n        }\n    }, 0);\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true, configurable: true });\n    const finalX = window.scrollX;\n    const finalY = window.scrollY;\n    if (next && next.parentNode && next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    if (!isEnabled(el))\n        return cleanUp(el);\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    if (finalX !== scrollX || finalY !== scrollY) {\n        adjustScroll(el, finalX, finalY, optionsOrPlugin);\n    }\n    let animation;\n    let styleReset = {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0\",\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: \"100\",\n    };\n    if (!isPlugin(optionsOrPlugin)) {\n        Object.assign(el.style, styleReset);\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], { duration: optionsOrPlugin.duration, easing: \"ease-out\" });\n    }\n    else {\n        const [keyframes, options] = getPluginTuple(optionsOrPlugin(el, \"remove\", oldCoords));\n        if ((options === null || options === void 0 ? void 0 : options.styleReset) !== false) {\n            styleReset = (options === null || options === void 0 ? void 0 : options.styleReset) || styleReset;\n            Object.assign(el.style, styleReset);\n        }\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", cleanUp.bind(null, el, styleReset));\n}\n/**\n * If the element being removed is at the very bottom of the page, and the\n * the page was scrolled into a space being \"made available\" by the element\n * that was removed, the page scroll will have jumped up some amount. We need\n * to offset the jump by the amount that the page was \"automatically\" scrolled\n * up. We can do this by comparing the scroll position before and after the\n * element was removed, and then offsetting by that amount.\n *\n * @param el - The element being deleted\n * @param finalX - The final X scroll position\n * @param finalY - The final Y scroll position\n * @param optionsOrPlugin - The options or plugin\n * @returns\n */\nfunction adjustScroll(el, finalX, finalY, optionsOrPlugin) {\n    const scrollDeltaX = scrollX - finalX;\n    const scrollDeltaY = scrollY - finalY;\n    const scrollBefore = document.documentElement.style.scrollBehavior;\n    const scrollBehavior = getComputedStyle(root).scrollBehavior;\n    if (scrollBehavior === \"smooth\") {\n        document.documentElement.style.scrollBehavior = \"auto\";\n    }\n    window.scrollTo(window.scrollX + scrollDeltaX, window.scrollY + scrollDeltaY);\n    if (!el.parentElement)\n        return;\n    const parent = el.parentElement;\n    let lastHeight = parent.clientHeight;\n    let lastWidth = parent.clientWidth;\n    const startScroll = performance.now();\n    // Here we use a manual scroll animation to keep the element using the same\n    // easing and timing as the parent’s scroll animation.\n    function smoothScroll() {\n        requestAnimationFrame(() => {\n            if (!isPlugin(optionsOrPlugin)) {\n                const deltaY = lastHeight - parent.clientHeight;\n                const deltaX = lastWidth - parent.clientWidth;\n                if (startScroll + optionsOrPlugin.duration > performance.now()) {\n                    window.scrollTo({\n                        left: window.scrollX - deltaX,\n                        top: window.scrollY - deltaY,\n                    });\n                    lastHeight = parent.clientHeight;\n                    lastWidth = parent.clientWidth;\n                    smoothScroll();\n                }\n                else {\n                    document.documentElement.style.scrollBehavior = scrollBefore;\n                }\n            }\n        });\n    }\n    smoothScroll();\n}\n/**\n * Determines the position of the element being removed.\n * @param el - The element being deleted\n * @returns\n */\nfunction deletePosition(el) {\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = coords.get(offsetParent) || getCoords(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (mutations && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            !isPlugin(config) &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (isPlugin(config)) {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, { duration: 250, easing: \"ease-in-out\", ...config });\n            }\n            mutations.observe(el, { childList: true });\n            parents.add(el);\n        }\n    }\n    return Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n        },\n        isEnabled: () => enabled.has(el),\n    });\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        autoAnimate(el, binding.value || {});\n    },\n    // ignore ssr see #96:\n    getSSRProps: () => ({}),\n};\n\nexport { autoAnimate as default, getTransitionSizes, vAutoAnimate };\n","export class Websocket {\n    static connection: WebSocket\n\n    static init(): void {\n        this.connection = new WebSocket(`${location.protocol === 'http:' ? 'ws:' : 'wss:'}//${location.host}`)\n    }\n\n    static listen(onClientsMessage: (event: MessageEvent) => Promise<void>, onOpenMessage = (): void => {}): void {\n        if (this.connection.readyState === 1) onOpenMessage()\n        this.connection.onopen = onOpenMessage\n        this.connection.onerror = (error): void => {\n            console.error('WebSocket Error ' + error)\n            this.connection.close()\n        }\n        this.connection.onclose = (e): void => {\n            console.log('Socket is closed. Reconnect will be attempted in 1 second.', e.reason)\n            setTimeout((): void => this.init(), 1000)\n        }\n        this.connection.onmessage = onClientsMessage\n    }\n\n    static send(datas: Record<string, unknown>[]): void {\n        this.connection.send(JSON.stringify(datas))\n    }\n}\n","import { html, render, TemplateResult } from 'lit'\nimport autoAnimate from '@formkit/auto-animate'\nimport { Utils } from '../classes/utils.js'\nimport { Commons } from '../classes/commons.js'\nimport { Caches } from '../classes/caches.js'\nimport { Websocket } from '../classes/websocket.js'\nimport { HTMLElementEvent, TCategory, TDish, TIngredient, TListIngredient, TRecipe } from '../types.js'\n\nexport default class Lists extends HTMLElement {\n    private ingredients: TListIngredient[] = []\n    private categories: TCategory[] = []\n    private recipeChoices: string[] = []\n    private orderedIngredients: string[] = []\n    private editMode: string | null = null\n\n    connectedCallback(): void {\n        Websocket.listen(\n            async (event): Promise<void> => {\n                this.ingredients = JSON.parse(await event.data.text())\n                this.displayIngredients()\n            },\n            async (): Promise<void> => {\n                Commons.clearPropositionsOnBackgroundClick((): void => this.render())\n                const response = ((await Caches.get('listIngredients', 'categories', 'ingredients')) ||\n                    (await Utils.request('/db', 'POST', { body: '[{ \"getListIngredients\": \"\" }, { \"getCategories\": \"\" }, { \"getIngredients\": \"\" }]' }))) as unknown as [TListIngredient[], TCategory[], TIngredient[]]\n                await Caches.set(false, 'listIngredients', response[0], 'categories', response[1], 'ingredients', response[2])\n                this.ingredients = response[0]\n                this.categories = response[1]\n                Commons.savedIngredients = response[2]\n                this.recipeChoices = []\n                this.sendMessage()\n                const cacheResponse = ((await Caches.get('recipes', 'dishes')) || (await Utils.request('/db', 'POST', { body: '[{ \"getRecipes\": \"\" }, { \"getDishes\": \"\" }]' }))) as unknown as [TRecipe[], TDish[]]\n                await Caches.set(false, 'recipes', cacheResponse[0], 'dishes', cacheResponse[1])\n            }\n        )\n    }\n\n    private sendMessage(): void {\n        Websocket.send(this.ingredients)\n        this.displayIngredients()\n    }\n\n    private async displayIngredients(): Promise<void> {\n        await Caches.set(false, 'listIngredients', this.ingredients)\n        this.orderedIngredients = (this.ingredients.length ? this.ingredients.filter((pIngredient): boolean | undefined => pIngredient.ordered).map((pIngredient): string | undefined => pIngredient._id?.toString()) : []) as string[]\n        this.render()\n        try {\n            autoAnimate(document.querySelector('ul') as HTMLElement)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    private resetMode(): void {\n        this.editMode = null\n        this.sendMessage()\n    }\n\n    private async editAndSaveListIngredient(pEvent: HTMLElementEvent<HTMLInputElement>, id: string): Promise<void> {\n        Commons.setPropositions()\n        const input =\n            pEvent.target.tagName === 'INPUT' && pEvent.target.name === 'ingredient'\n                ? pEvent.target\n                : pEvent.target.tagName === 'INPUT' && pEvent.target.name === 'size'\n                  ? pEvent.target.previousElementSibling?.querySelector('input')\n                  : pEvent.target.previousElementSibling?.previousElementSibling?.querySelector('input')\n        const sizeInput = input?.closest('div')?.nextElementSibling as HTMLInputElement\n        const unitSelect = input?.closest('div')?.nextElementSibling?.nextElementSibling as HTMLSelectElement\n        if (input?.value) {\n            const category = Commons.savedIngredients.map((pIngredient): string | false => pIngredient.title === input.value && pIngredient.category).filter((pIngredient): string | false => pIngredient)[0]\n            const response = (await Utils.request('/db', 'POST', {\n                body: `[{ \"setListIngredients\": { \"ingredients\": [ { \"title\": \"${input.value}\"${id ? `, \"id\": \"${id}\"` : ''}${category ? `, \"category\": \"${category}\"` : ''}, \"size\": \"${sizeInput.value}\", \"unit\": \"${unitSelect.value}\" } ] } }, { \"getIngredients\": \"\" }]`,\n            })) as unknown as [TListIngredient[], TIngredient[]]\n            this.ingredients = response[0]\n            Commons.savedIngredients = response[1]\n            await Caches.set(false, 'listIngredients', this.ingredients, 'ingredients', Commons.savedIngredients)\n            input.value = ''\n            sizeInput.value = ''\n            this.resetMode()\n        }\n    }\n\n    private async editListIngredientOrdered(id: string, ordered: boolean): Promise<void> {\n        this.ingredients = (await Utils.request('/db', 'POST', { body: `{ \"setListIngredients\": { \"ingredients\": [ { \"id\": \"${id}\", \"ordered\": ${ordered} } ] } }` })) as TListIngredient[]\n        await Caches.set(false, 'listIngredients', this.ingredients)\n        this.resetMode()\n    }\n\n    private async removeListIngredient(id: string): Promise<void> {\n        Utils.confirm(html`<h3>Voulez-vous vraiment supprimer ?</h3>`, async (): Promise<void> => {\n            this.ingredients = (await Utils.request('/db', 'POST', { body: `{ \"removeListIngredient\": \"${id}\" }` })) as TListIngredient[]\n            await Caches.set(false, 'listIngredients', this.ingredients)\n            this.sendMessage()\n            Utils.toast('success', 'Ingrédient supprimé')\n        })\n    }\n\n    private addListIngredientByRecipe(): void {\n        document.body.addEventListener('modalConfirm', (pEvent): void => {\n            this.recipeChoices = (pEvent as CustomEvent).detail.choices\n        })\n        Utils.confirm(html` <sc-recipes choiceMode=\"checkbox\" /> `, async (): Promise<void> => {\n            if (this.recipeChoices.length) {\n                const newIngredients: TListIngredient[] = []\n                Commons.savedIngredients.forEach((pIngredient): void => {\n                    const recipe = pIngredient.recipes.find((pRecipe): boolean => this.recipeChoices.some((pRecipeId): boolean => pRecipe.recipeId === pRecipeId))\n                    if (recipe) {\n                        newIngredients.push({\n                            title: pIngredient.title,\n                            size: recipe.size,\n                            unit: recipe.unit,\n                            category: pIngredient.category,\n                        })\n                    }\n                })\n                this.ingredients = (await Utils.request('/db', 'POST', { body: `{ \"setListIngredients\": { \"ingredients\": ${JSON.stringify(newIngredients)} } }` })) as TListIngredient[]\n                await Caches.set(false, 'listIngredients', this.ingredients)\n                this.recipeChoices = []\n                this.sendMessage()\n            }\n        })\n    }\n\n    private setCategory(ingredientId: string, ingredientTitle: string): void {\n        let categoryId: string\n        document.body.addEventListener('modalConfirm', (pEvent): void => {\n            categoryId = (pEvent as CustomEvent).detail.id\n        })\n        Utils.confirm(html` <sc-categories choiceMode /> `, async (): Promise<void> => {\n            const response = (await Utils.request('/db', 'POST', {\n                body: `[{ \"setListIngredients\": { \"ingredients\": [ { \"title\": \"${ingredientTitle}\", \"id\": \"${ingredientId}\", \"category\": \"${categoryId}\" } ] } }, { \"getIngredients\": \"\" }]`,\n            })) as unknown as [TListIngredient[], TIngredient[]]\n            this.ingredients = response[0]\n            Commons.savedIngredients = response[1]\n            await Caches.set(false, 'listIngredients', this.ingredients, 'ingredients', Commons.savedIngredients)\n            this.sendMessage()\n        })\n    }\n\n    private clear(): void {\n        Utils.confirm(html`<h3>Voulez vous vider la liste ?</h3>`, async (): Promise<void> => {\n            this.orderedIngredients = []\n            this.ingredients = (await Utils.request('/db', 'POST', { body: '{ \"clearListIngredients\": \"\" }' })) as TListIngredient[]\n            await Caches.set(false, 'listIngredients', this.ingredients)\n            this.sendMessage()\n        })\n    }\n\n    private openEditListIngredient(ingredient: TListIngredient | null = null): void {\n        let event: HTMLElementEvent<HTMLInputElement>\n        document.body.addEventListener('modalConfirm', (pEvent): void => {\n            event = (pEvent as CustomEvent).detail.event\n        })\n        Utils.confirm(\n            html``,\n            async (): Promise<void> => {\n                await this.editAndSaveListIngredient(event, ingredient?._id as unknown as string)\n                Commons.renderAddIngredientInDialog(ingredient as TListIngredient, true)\n            },\n            (): void => Commons.renderAddIngredientInDialog(ingredient as TListIngredient, true)\n        )\n        Commons.renderAddIngredientInDialog(ingredient as TListIngredient)\n    }\n\n    private render(): void {\n        const listIngredient = (pIngredient: TListIngredient): TemplateResult => {\n            const ingredientId = pIngredient._id as unknown as string\n            const ingredientTitle = pIngredient.title\n            const ingredientSize = pIngredient.size\n            const ingredientUnit = pIngredient.unit\n            const isIngredientOrdered = this.orderedIngredients?.includes(ingredientId)\n            return html`\n                <li>\n                    <div class=\"editListIngredient ${this.editMode === ingredientId ? 'grid' : ''}\">\n                        ${html`\n                            <a\n                                class=\"${isIngredientOrdered ? 'ordered' : ''}\"\n                                @click=\"${(): void => {\n                                    this.editListIngredientOrdered(ingredientId, !isIngredientOrdered)\n                                    if (!isIngredientOrdered) this.orderedIngredients.push(ingredientId)\n                                    else this.orderedIngredients = this.orderedIngredients.filter((pOrderedIngredient): boolean => ingredientId !== pOrderedIngredient)\n                                    if (this.orderedIngredients.length === this.ingredients.length) this.clear()\n                                }}\"\n                                ><span>${ingredientTitle}${ingredientSize && html` (${ingredientSize}${ingredientUnit !== 'nb' ? ` ${ingredientUnit}` : ''})`}</span></a\n                            >\n                            <button class=\"edit\" @click=\"${(): void => this.openEditListIngredient(pIngredient)}\" .disabled=\"${isIngredientOrdered}\">\n                                <svg class=\"edit\">\n                                    <use href=\"#edit\"></use>\n                                </svg>\n                                <span>Modifier</span>\n                            </button>\n                            <button type=\"button\" class=\"remove\" @click=\"${(): Promise<void> => this.removeListIngredient(ingredientId)}\" .disabled=\"${isIngredientOrdered}\">\n                                <svg class=\"remove\">\n                                    <use href=\"#remove\"></use>\n                                </svg>\n                                <span>Supprimer</span>\n                            </button>\n                            ${!pIngredient.category\n                                ? html`\n                                      <button type=\"button\" class=\"setCategory\" @click=\"${(): void => this.setCategory(ingredientId, ingredientTitle)}\" .disabled=\"${isIngredientOrdered}\">\n                                          <svg class=\"setCategory\">\n                                              <use href=\"#setCategory\"></use>\n                                          </svg>\n                                          <span>Associer une catégorie</span>\n                                      </button>\n                                  `\n                                : ''}\n                        `}\n                    </div>\n                </li>\n            `\n        }\n        const getCategoryTitle = (pCategoryId: string): string => this.categories.map((pCategory): string | false => pCategory._id.toString() === pCategoryId && pCategory.title).filter((pCategory): string | false => pCategory)[0] as string\n        const ingredientsByCategory = this.ingredients\n            ?.filter((pIngredient): string | boolean | undefined => pIngredient.category || pIngredient.ordered)\n            .sort((a, b): number => getCategoryTitle(a.category)?.localeCompare(getCategoryTitle(b.category)))\n            .reduce((group: Record<string, TListIngredient[]>, ingredient): Record<string, TListIngredient[]> => {\n                const categoryId = ingredient.category\n                const category = !ingredient.ordered ? getCategoryTitle(categoryId) : Commons.strings.ordered\n                group[category] = group[category] ?? []\n                group[category].push(ingredient)\n                return group\n            }, {})\n        render(\n            html`\n                <div class=\"title\">\n                    <h2>Votre liste</h2>\n                    <button type=\"button\" class=\"add\" @click=\"${(): void => this.openEditListIngredient()}\">\n                        <svg class=\"add\">\n                            <use href=\"#add\"></use>\n                        </svg>\n                        <span>Ajouter un ingrédient</span>\n                    </button>\n                    <button type=\"button\" class=\"addList\" @click=\"${(): void => this.addListIngredientByRecipe()}\">\n                        <svg class=\"addList\">\n                            <use href=\"#addList\"></use>\n                        </svg>\n                        <span>Ajouter des ingrédients</span>\n                    </button>\n                    <button type=\"button\" class=\"trash\" @click=\"${(): void => this.clear()}\">\n                        <svg class=\"trash\">\n                            <use href=\"#trash\"></use>\n                        </svg>\n                        <span>Vider</span>\n                    </button>\n                </div>\n                <aside>\n                    <nav>\n                        <ul>\n                            ${!this.ingredients?.length\n                                ? html` <li>Aucun ingrédient ...</li>`\n                                : html`\n                                      ${this.ingredients?.filter((pIngredient): boolean => !pIngredient.category && !pIngredient.ordered).map((pIngredient): TemplateResult => listIngredient(pIngredient))}\n                                      ${Object.entries(ingredientsByCategory)\n                                          .sort(([a], [b]): number => (a === Commons.strings.ordered ? 1 : b === Commons.strings.ordered ? -1 : a.localeCompare(b)))\n                                          .map(([pCategory, pValue]): TemplateResult => {\n                                              return html`\n                                                  <li>\n                                                      <div class=\"category\">${pCategory}</div>\n                                                      <ul>\n                                                          ${pValue.sort((a, b): number => a.title.localeCompare(b.title)).map((pIngredient): TemplateResult => listIngredient(pIngredient))}\n                                                      </ul>\n                                                  </li>\n                                              `\n                                          })}\n                                  `}\n                        </ul>\n                    </nav>\n                </aside>\n            `,\n            this\n        )\n    }\n}\n","import { html, render } from 'lit'\n\nexport default class Header extends HTMLElement {\n    constructor() {\n        super()\n        this.render()\n    }\n\n    get src(): string | null {\n        return this.getAttribute('src')\n    }\n\n    get alt(): string | null {\n        return this.getAttribute('alt')\n    }\n\n    connectedCallback(): void {\n        const image = this.querySelector('img') as HTMLImageElement\n        image.style.transform = `translate3d(0, ${window.scrollY}px, 0)`\n        window.addEventListener('scroll', (): void => {\n            image.style.transform = `translate3d(0, ${window.scrollY * 0.5}px, 0)`\n            if (window.scrollY >= this.getBoundingClientRect().height) this.firstElementChild?.classList.add('titles')\n            else this.firstElementChild?.classList.remove('titles')\n        })\n    }\n\n    private render(): void {\n        render(\n            html`\n                <div class=\"image\">\n                    <img alt=\"${this.alt}\" src=\"${this.src}\" />\n                </div>\n            `,\n            this\n        )\n    }\n}\n","import { html, render } from 'lit'\nimport { Utils } from '../classes/utils.js'\nimport { TValidateReturn } from '../types.js'\nimport { Caches } from '../classes/caches.js'\n\nexport default class Login extends HTMLElement {\n    async connectedCallback(): Promise<void> {\n        document.body.addEventListener('currentUserAvailable', async (): Promise<void> => {\n            location.href = 'app'\n        })\n        await Caches.clear()\n        this.render()\n        this.setFormListener()\n    }\n\n    private setFormListener(): void {\n        const form = this.querySelector('form')\n        form?.addEventListener('submit', async (pEvent): Promise<void> => {\n            pEvent.preventDefault()\n            const result = (await Utils.request('/login', 'POST', { body: JSON.stringify(Object.fromEntries(new FormData(form).entries())) })) as TValidateReturn\n            if (result.success) location.reload()\n            else Utils.toast('error', result.message as string)\n        })\n    }\n\n    private render(): void {\n        render(\n            html`\n                <form>\n                    <label>\n                        <span>Identifiant</span>\n                        <input name=\"email\" required type=\"email\" />\n                    </label>\n                    <button\n                        class=\"passwordLost\"\n                        role=\"link\"\n                        @click=\"${(): void => {\n                            Utils.confirm(\n                                html` <h4>Mot de passe perdu</h4>\n                                    <form>\n                                        <label>\n                                            <span>Email</span>\n                                            <input name=\"email\" type=\"email\" required />\n                                        </label>\n                                    </form>`,\n                                async (): Promise<void> => {\n                                    const entries = Object.fromEntries(new FormData(document.querySelector('sc-confirm form') as HTMLFormElement).entries())\n                                    const result = (await Utils.request('/requestPasswordReset', 'POST', { body: JSON.stringify(entries) })) as TValidateReturn\n                                    Utils.toast(result.success ? 'success' : 'error', result.message as string)\n                                },\n                                (): void => {}\n                            )\n                        }}\"\n                    >\n                        <span>Mot de passe perdu</span>\n                    </button>\n                    <label>\n                        <span>Mot de passe</span>\n                        <input name=\"password\" required type=\"password\" />\n                    </label>\n                    <button type=\"submit\">\n                        <span>Envoyer</span>\n                    </button>\n                    <a href=\"/register\" role=\"button\">\n                        <span>Inscrivez-vous</span>\n                    </a>\n                </form>\n            `,\n            this\n        )\n    }\n}\n","import { html, render, TemplateResult } from 'lit'\nimport { Utils } from '../classes/utils.js'\nimport { Caches } from '../classes/caches.js'\nimport { HTMLElementEvent, TCategory } from '../types.js'\n\nexport default class Categories extends HTMLElement {\n    private categories: TCategory[] = []\n    private editMode: string | null = null\n\n    get choiceMode(): string | null {\n        const choiceMode = this.getAttribute('choiceMode')\n        return choiceMode !== null ? choiceMode : null\n    }\n\n    set choiceMode(pValue) {\n        if (pValue) this.setAttribute('choiceMode', pValue)\n        else this.removeAttribute('choiceMode')\n    }\n\n    async connectedCallback(): Promise<void> {\n        this.categories = ((await Caches.get('categories')) || (await Utils.request('/db', 'POST', { body: '{ \"getCategories\": \"\" }' }))) as unknown as TCategory[]\n        await Caches.set(false, 'categories', this.categories)\n        this.render()\n    }\n\n    private resetMode(): void {\n        this.editMode = null\n        this.render()\n    }\n\n    private async editAndSaveCategory(pEvent: KeyboardEvent & HTMLElementEvent<HTMLInputElement>, id: string | null = null): Promise<void> {\n        const input = pEvent.target.tagName === 'INPUT' ? pEvent.target : (pEvent.target.closest('button')?.previousElementSibling as HTMLInputElement)\n        if (input?.value) {\n            this.categories = (await Utils.request('/db', 'POST', { body: `{ \"setCategory\": { \"title\": \"${input.value}\"${id ? `, \"id\": \"${id}\"` : ''} } }` })) as unknown as TCategory[]\n            await Caches.set(false, 'categories', this.categories)\n            input.value = ''\n            this.resetMode()\n        }\n    }\n\n    private removeCategory(id: string): void {\n        Utils.confirm(html`<h3>Voulez-vous vraiment supprimer ?</h3>`, async (): Promise<void> => {\n            this.categories = (await Utils.request('/db', 'POST', { body: `{ \"removeCategory\": \"${id}\" }` })) as unknown as TCategory[]\n            await Caches.set(false, 'categories', this.categories)\n            this.render()\n            Utils.toast('success', 'Catégorie supprimée')\n        })\n    }\n\n    private render(): void {\n        this.categories.sort((a, b): number => a.title.localeCompare(b.title))\n        render(\n            html`\n                ${this.choiceMode === null ? html`<h2>Liste des catégories</h2>` : ''}\n                <aside>\n                    <nav>\n                        <ul>\n                            <li>\n                                ${this.choiceMode === null\n                                    ? html`\n                                          <div class=\"addCategory grid\">\n                                              <input\n                                                  name=\"newCategory\"\n                                                  type=\"text\"\n                                                  @keyup=\"${(pEvent: HTMLElementEvent<HTMLInputElement>): void => {\n                                                      if (pEvent.key === 'Enter') this.editAndSaveCategory(pEvent)\n                                                  }}\"\n                                              />\n                                              <button type=\"button\" class=\"add\" @click=\"${(pEvent: HTMLElementEvent<HTMLInputElement>): Promise<void> => this.editAndSaveCategory(pEvent)}\">\n                                                  <svg class=\"add\">\n                                                      <use href=\"#add\"></use>\n                                                  </svg>\n                                                  <span>Ajouter une catégorie</span>\n                                              </button>\n                                          </div>\n                                      `\n                                    : ''}\n                            </li>\n                            ${!this.categories.length\n                                ? html` <li>Aucune catégorie ...</li>`\n                                : this.categories.map((pCategory): TemplateResult => {\n                                      const categoryTitle = pCategory.title\n                                      const categoryId = pCategory._id.toString()\n                                      return this.choiceMode !== null\n                                          ? html`\n                                                <label for=\"${categoryId}\">\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"${categoryId}\"\n                                                        name=\"category\"\n                                                        value=\"${categoryTitle}\"\n                                                        .checked=\"${this.choiceMode === categoryId}\"\n                                                        @change=\"${(): boolean => document.body.dispatchEvent(new CustomEvent('modalConfirm', { detail: { id: categoryId, title: categoryTitle } }))}\"\n                                                    />\n                                                    ${categoryTitle}\n                                                </label>\n                                            `\n                                          : html`\n                                                <li>\n                                                    <div class=\"editCategory ${this.editMode === categoryId ? 'grid' : ''}\">\n                                                        ${this.editMode === categoryId\n                                                            ? html` <input\n                                                                  name=\"editCategory\"\n                                                                  required\n                                                                  type=\"text\"\n                                                                  value=\"${categoryTitle}\"\n                                                                  @keyup=\"${(pEvent: HTMLElementEvent<HTMLInputElement>): void => {\n                                                                      if (pEvent.key === 'Enter') this.editAndSaveCategory(pEvent, categoryId)\n                                                                      if (pEvent.key === 'Escape') this.resetMode()\n                                                                  }}\"\n                                                              />`\n                                                            : html` <span>${categoryTitle}</span> `}\n                                                        ${this.editMode === categoryId\n                                                            ? html`\n                                                                  <button class=\"valid\" @click=\"${(pEvent: HTMLElementEvent<HTMLInputElement>): Promise<void> => this.editAndSaveCategory(pEvent, categoryId)}\">\n                                                                      <svg class=\"valid\">\n                                                                          <use href=\"#valid\"></use>\n                                                                      </svg>\n                                                                      <span>Valider</span>\n                                                                  </button>\n                                                              `\n                                                            : html`\n                                                                  <button\n                                                                      class=\"edit\"\n                                                                      @click=\"${(): void => {\n                                                                          this.editMode = categoryId\n                                                                          this.render()\n                                                                      }}\"\n                                                                  >\n                                                                      <svg class=\"edit\">\n                                                                          <use href=\"#edit\"></use>\n                                                                      </svg>\n                                                                      <span>Modifier</span>\n                                                                  </button>\n                                                              `}\n                                                        ${this.editMode === categoryId\n                                                            ? html`\n                                                                  <button type=\"button\" class=\"undo\" @click=\"${(): void => this.resetMode()}\">\n                                                                      <svg class=\"undo\">\n                                                                          <use href=\"#undo\"></use>\n                                                                      </svg>\n                                                                      <span>Annuler</span>\n                                                                  </button>\n                                                              `\n                                                            : html`\n                                                                  <button type=\"button\" class=\"remove\" @click=\"${(): void => this.removeCategory(categoryId)}\">\n                                                                      <svg class=\"remove\">\n                                                                          <use href=\"#remove\"></use>\n                                                                      </svg>\n                                                                      <span>Supprimer</span>\n                                                                  </button>\n                                                              `}\n                                                    </div>\n                                                </li>\n                                            `\n                                  })}\n                        </ul>\n                    </nav>\n                </aside>\n            `,\n            this\n        )\n    }\n}\n","import { html, render } from 'lit'\n\ntype TAnimations = Record<string, { element: HTMLElement; lowValue: number; highValue: number; animations: string }[]>\n\nexport default class AnimatedSection extends HTMLElement {\n    private animations!: TAnimations\n\n    get height(): string | null {\n        return this.getAttribute('height')\n    }\n\n    connectedCallback(): void {\n        this.style.cssText = `height: ${this.height || 8000}px; position: relative;display: block;`\n        this.animations = Array.from(this.querySelectorAll('*')).reduce((pGroup: TAnimations, pChild): TAnimations => {\n            const name = `${pChild.tagName}.${pChild.className}`\n            Array.from(pChild.attributes).forEach((pAttribute): void => {\n                if (pAttribute.name.includes('data')) {\n                    if (!pGroup[name]) pGroup[name] = []\n                    const values = pAttribute.name.split('-')\n                    pGroup[name].push({ element: pChild as HTMLElement, lowValue: Number(values[1]), highValue: Number(values[2]), animations: pAttribute.value })\n                }\n            })\n            return pGroup\n        }, {})\n        const children = Array.from(this.children)\n        this.render()\n        this.querySelector('slot')?.replaceWith(...children)\n        document.body.addEventListener('scroll', (): void => this.scrollListener())\n        this.scrollListener()\n    }\n\n    private scrollListener(): void {\n        const containerRect = document.body.getBoundingClientRect()\n        const selfRect = this.getBoundingClientRect()\n        if (containerRect.height < selfRect.height) {\n            const offTop = containerRect.y - selfRect.y\n            const viewHeight = selfRect.height - containerRect.height\n            const proportion = offTop / viewHeight\n            this.setAnimations(proportion)\n        }\n    }\n\n    private setAnimations(proportion: number): void {\n        Object.values(this.animations).forEach((pAnimations): void => {\n            for (const animation of pAnimations) {\n                if ((proportion >= animation.lowValue && proportion < animation.highValue) || (animation.lowValue === 0 && proportion < animation.lowValue)) {\n                    animation.element.setAttribute('style', animation.animations.replaceAll('§§proportion§§', `${proportion}`))\n                }\n            }\n        })\n    }\n\n    private render(): void {\n        render(\n            html`\n                <div style=\"height: ${window.innerHeight}px; position: sticky; top: 0;\">\n                    <slot></slot>\n                </div>\n            `,\n            this\n        )\n    }\n}\n","import { html, render } from 'lit'\n\nexport default class Loader extends HTMLElement {\n    static get observedAttributes(): [string] {\n        return ['visible']\n    }\n\n    get visible(): boolean {\n        return this.hasAttribute('visible')\n    }\n\n    set visible(pValue) {\n        if (pValue) this.setAttribute('visible', '')\n        else this.removeAttribute('visible')\n    }\n\n    connectedCallback(): void {\n        this.render()\n        this.style.display = 'none'\n    }\n\n    attributeChangedCallback(name: string, oldValue: string, newValue: string): void {\n        if (name === 'visible' && oldValue !== newValue) {\n            if (newValue === '') {\n                this.style.display = ''\n                setTimeout((): void => this.render(), 20)\n            }\n            if (newValue === null) {\n                this.style.display = 'none'\n                setTimeout((): void => this.render(), 20)\n            }\n        }\n    }\n\n    private render(): void {\n        render(html`<div class=\"spinner\"></div>`, this)\n    }\n}\n","import { Utils } from '../classes/utils.js'\n\nexport default class LoadingBlock extends HTMLElement {\n    constructor() {\n        super()\n        this.style.visibility = 'hidden'\n    }\n\n    get loadingTimer(): number {\n        return Number(this.getAttribute('loadingTimer'))\n    }\n\n    connectedCallback(): void {\n        Utils.loader(true)\n        setTimeout((): void => {\n            Utils.loader(false)\n            this.style.visibility = 'visible'\n        }, this.loadingTimer)\n    }\n\n    // private render(): void {\n    //     // TODO vérifier que le slot fonctionne bien\n    //     render(html` <slot></slot> `, this)\n    // }\n}\n","import { html, render, TemplateResult } from 'lit'\nimport { Utils } from '../classes/utils.js'\nimport { Commons } from '../classes/commons.js'\nimport { Caches } from '../classes/caches.js'\nimport { Websocket } from '../classes/websocket.js'\nimport { HTMLElementEvent, TDish, TIngredient, TRecipeInIngredient } from '../types.js'\n\nexport default class Dishes extends HTMLElement {\n    private week: string[] = []\n    private calendar: Record<string, string[]> = {}\n    private dishes: TDish[] = []\n    private dishName: string = ''\n    private dishId: string | null = null\n    private dishesByCalendar: Record<string, Record<string, TDish>> = {}\n\n    async connectedCallback(): Promise<void> {\n        this.week = ['Lundi', 'mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche']\n        this.calendar = {\n            Midi: this.week,\n            Soir: this.week,\n        }\n        const response = ((await Caches.get('dishes', 'ingredients')) || (await Utils.request('/db', 'POST', { body: '[{ \"getDishes\": \"\" }, { \"getIngredients\": \"\" }]' }))) as unknown as [TDish[], TIngredient[]]\n        await Caches.set(false, 'dishes', response[0], 'ingredients', response[1])\n        this.dishes = response[0]\n        Commons.savedIngredients = response[1]\n        this.refresh()\n    }\n\n    private openModal(pEvent: HTMLElementEvent<HTMLButtonElement>, dish: TDish, isEdit: boolean = false): void {\n        pEvent.target.closest('details')?.removeAttribute('open')\n        document.body.addEventListener('modalConfirm', (pEvent): void => {\n            const detail = (pEvent as CustomEvent).detail\n            this.dishName = detail.dishName || detail.title\n            this.dishId = (detail.choices && detail.choices[0]) || null\n        })\n        Utils.confirm(\n            isEdit\n                ? html`\n                      <label for=\"firstname\">\n                          <input\n                              type=\"text\"\n                              value=\"${dish?.name}\"\n                              @input=\"${(pEvent: CustomEvent): boolean => document.body.dispatchEvent(new CustomEvent('modalConfirm', { detail: { dishName: (pEvent.target as HTMLInputElement).value } }))}\"\n                          />\n                      </label>\n                  `\n                : html` <sc-recipes choiceMode=\"radio\" /> `,\n            async (): Promise<void> => {\n                if (this.dishName) {\n                    dish.name = this.dishName\n                    this.dishes = (await Utils.request('/db', 'POST', { body: `{ \"setDish\": ${JSON.stringify(dish)} }` })) as TDish[]\n                    await Caches.set(false, 'dishes', this.dishes)\n                }\n                this.refresh()\n                if (!isEdit && this.dishName) {\n                    const newIngredients = Commons.savedIngredients\n                        .filter((pIngredient): number | boolean => pIngredient.recipes.length && pIngredient.recipes.some((pRecipe): boolean => pRecipe.recipeId === this.dishId))\n                        .map((pIngredient): { category: string; title: string; unit: string; size: string } => {\n                            const recipe = pIngredient.recipes.find((pRecipe): boolean => pRecipe.recipeId === this.dishId) as TRecipeInIngredient\n                            return {\n                                title: pIngredient.title,\n                                category: pIngredient.category,\n                                unit: recipe.unit,\n                                size: recipe.size,\n                            }\n                        })\n                    const listIngredients = (await Utils.request('/db', 'POST', { body: `{ \"setListIngredients\": { \"ingredients\": ${JSON.stringify(newIngredients)} } }` })) as TIngredient[]\n                    await Caches.set(false, 'listIngredients', listIngredients)\n                    Websocket.send(listIngredients)\n                }\n                this.dishName = ''\n            }\n        )\n    }\n\n    private refresh(): void {\n        this.dishesByCalendar = this.dishes.reduce((group: Record<string, Record<string, TDish>>, dish): Record<string, Record<string, TDish>> => {\n            group[dish.time] = group[dish.time] ?? {}\n            group[dish.time][dish.day] = group[dish.time][dish.day] ?? {}\n            group[dish.time][dish.day] = dish\n            return group\n        }, {})\n        this.render()\n    }\n\n    private clear(pEvent: HTMLElementEvent<HTMLButtonElement> | null = null, id: string = ''): void {\n        if (pEvent) pEvent.target.closest('details')?.removeAttribute('open')\n        Utils.confirm(html`<h3>Voulez vous effacer ${id ? 'ce plat' : 'les plats de la semaine'} ?</h3>`, async (): Promise<void> => {\n            this.dishes = (await Utils.request('/db', 'POST', { body: `{ \"clearDishes\": \"${id || ''}\" }` })) as TDish[]\n            await Caches.set(false, 'dishes', this.dishes)\n            this.refresh()\n        })\n    }\n\n    private render(): void {\n        render(\n            html`\n                <div class=\"title\">\n                    <h2>Les plats de la semaine</h2>\n                    <button type=\"button\" class=\"trash\" @click=\"${(): void => this.clear()}\">\n                        <svg class=\"trash\">\n                            <use href=\"#trash\"></use>\n                        </svg>\n                        <span>Vider</span>\n                    </button>\n                </div>\n                <div class=\"content\">\n                    <div class=\"grid\">\n                        <div>#</div>\n                        ${this.week.map((pDay): TemplateResult => {\n                            return html` <div>${pDay}</div> `\n                        })}\n                    </div>\n                    ${Object.entries(this.calendar).map(([pTime, pDays]): TemplateResult => {\n                        return html`\n                            <div class=\"grid\">\n                                <div>${pTime}</div>\n                                ${pDays.map((pDay): TemplateResult => {\n                                    const dish = (this.dishesByCalendar[pTime] && this.dishesByCalendar[pTime][pDay]) ?? { time: pTime, day: pDay }\n                                    return html`\n                                        <details class=\"dropdown\">\n                                            <summary aria-haspopup=\"listbox\" role=\"button\">${dish.name}</summary>\n                                            <ul role=\"listbox\">\n                                                <li>\n                                                    <button @click=\"${(pEvent: HTMLElementEvent<HTMLButtonElement>): void => this.openModal(pEvent, dish, true)}\">Éditer</button>\n                                                </li>\n                                                <li>\n                                                    <button @click=\"${(pEvent: HTMLElementEvent<HTMLButtonElement>): void => this.openModal(pEvent, dish)}\">Ajouter</button>\n                                                </li>\n                                                ${dish._id &&\n                                                html`\n                                                    <li>\n                                                        <button @click=\"${(pEvent: HTMLElementEvent<HTMLButtonElement>): void => this.clear(pEvent, dish._id.toString())}\">Effacer</button>\n                                                    </li>\n                                                `}\n                                            </ul>\n                                        </details>\n                                    `\n                                })}\n                            </div>\n                        `\n                    })}\n                </div>\n            `,\n            this\n        )\n    }\n}\n","import { html, render } from 'lit'\nimport { Utils } from '../classes/utils.js'\n\nexport default class Link extends HTMLElement {\n    get href(): string | null {\n        return this.getAttribute('href')\n    }\n\n    set href(pValue) {\n        this.setAttribute('open', <string>pValue)\n    }\n\n    async connectedCallback(): Promise<void> {\n        const children = Array.from(this.children)\n        this.render()\n        this.querySelector('slot')?.replaceWith(...children)\n        const fragment = await Utils.getFragmentHtml(<string>this.href)\n        this.addEventListener('click', (): void => {\n            history.pushState({}, '', this.href)\n            REPLACEZONE(fragment)\n        })\n    }\n\n    private render(): void {\n        render(html` <slot></slot> `, this)\n    }\n}\n\nconst REPLACEZONE = (pFragment: Record<string, string>): void => {\n    ;(<HTMLElement>document.querySelector('[data-replaced-zone]')).replaceChildren(document.createRange().createContextualFragment(pFragment.text))\n    document.body.className = pFragment.class\n    const title = document.querySelector('[data-replaced-title]')\n    if (title) title.innerHTML = pFragment.title\n}\n\nwindow.addEventListener('popstate', async (): Promise<void> => REPLACEZONE(await Utils.getFragmentHtml(location.pathname)))\n","import { html, render, TemplateResult } from 'lit'\nimport { TRoute } from '../types.js'\nimport { Caches } from '../classes/caches.js'\nimport { Utils } from '../classes/utils.js'\n\nexport default class Menu extends HTMLElement {\n    private links: TRoute[] = []\n    private isBurger: boolean = false\n    private isHidden: boolean = false\n\n    constructor() {\n        super()\n        this.style.display = 'none'\n    }\n\n    connectedCallback(): void {\n        document.body.addEventListener('currentUserAvailable', async (): Promise<void> => {\n            this.links = ((await Caches.get('routes')) || (await Utils.request('/routes.json'))) as TRoute[] & { error: string }\n            if (!this.links || (this.links as unknown as { error: string }).error) return\n            await Caches.set(false, 'routes', this.links)\n            this.removeAttribute('style')\n            this.displayMenu()\n            window.addEventListener('resize', (): void => this.displayMenu())\n            window.addEventListener('popstate', (): void => this.render())\n        })\n    }\n\n    private displayMenu(): void {\n        this.isBurger = window.innerWidth <= 1100\n        this.isHidden = window.innerWidth <= 1100\n        if (this.isBurger) this.setAttribute('data-burger', '')\n        else this.removeAttribute('data-burger')\n        this.render()\n    }\n\n    private render(): void {\n        render(\n            html`\n                ${this.isBurger\n                    ? html`\n                          <button\n                              class=\"burger\"\n                              @click=\"${(): void => {\n                                  this.isHidden = false\n                                  this.render()\n                              }}\"\n                          >\n                              <svg class=\"burger\">\n                                  <use href=\"#burger\"></use>\n                              </svg>\n                              <span>Burger Menu</span>\n                          </button>\n                      `\n                    : ''}\n                <div data-hidden=\"${this.isHidden}\">\n                    ${this.isBurger\n                        ? html`\n                              <button\n                                  class=\"back\"\n                                  @click=\"${(): void => {\n                                      this.isHidden = true\n                                      this.render()\n                                  }}\"\n                              >\n                                  <svg class=\"back\">\n                                      <use href=\"#back\"></use>\n                                      <span>Retour</span>\n                                  </svg>\n                              </button>\n                          `\n                        : ''}\n                    <ul>\n                        ${this.links.map(\n                            (pLink): TemplateResult => html`\n                                <li data-selected=\"${pLink.path === location.pathname}\" @click=\"${(): void => this.displayMenu()}\">\n                                    <sc-link href=\"${pLink.path}\" role=\"button\">\n                                        <span>${pLink.label}</span>\n                                    </sc-link>\n                                </li>\n                            `\n                        )}\n                    </ul>\n                </div>\n            `,\n            this\n        )\n    }\n}\n","import { html, render } from 'lit'\nimport { Utils } from '../classes/utils.js'\nimport { TValidateReturn } from '../types.js'\n\nexport default class Register extends HTMLElement {\n    connectedCallback(): void {\n        document.body.addEventListener('currentUserAvailable', async (): Promise<void> => {\n            location.href = 'app'\n        })\n        this.render()\n        this.setFormListener()\n    }\n\n    private setFormListener(): void {\n        const form = this.querySelector('form')\n        form?.addEventListener('submit', async (pEvent): Promise<void> => {\n            pEvent.preventDefault()\n            const result = (await Utils.request('/register', 'POST', { body: JSON.stringify(Object.fromEntries(new FormData(form).entries())) })) as TValidateReturn\n            if (result.success) location.href = '/'\n            else Utils.toast('error', result.message as string)\n        })\n    }\n\n    private render(): void {\n        render(\n            html`\n                <form>\n                    <label>\n                        <span>Prénom</span>\n                        <input name=\"firstName\" required type=\"text\" />\n                    </label>\n                    <label>\n                        <span>Nom</span>\n                        <input name=\"lastName\" required type=\"text\" />\n                    </label>\n                    <label>\n                        <span>Email</span>\n                        <input name=\"mail\" required type=\"email\" />\n                    </label>\n                    <label>\n                        <span>Mot de passe</span>\n                        <input name=\"password\" required type=\"password\" />\n                    </label>\n                    <label>\n                        <span>Répétez le mot de passe</span>\n                        <input name=\"passwordBis\" required type=\"password\" />\n                    </label>\n                    <button type=\"submit\">\n                        <span>S'inscrire</span>\n                    </button>\n                </form>\n            `,\n            this\n        )\n    }\n}\n","import { TUser } from '../types.js'\nimport { Utils } from './utils.js'\nimport { Caches } from './caches.js'\nimport { html } from 'lit'\n\nexport class User {\n    static currentUser: TUser | null = null\n\n    static async getCurrentUser(): Promise<void> {\n        const user = (await Utils.request('/currentUser')) as TUser & { error: string }\n        this.currentUser = user.error ? null : user\n        if (this.currentUser) document.body.dispatchEvent(new CustomEvent('currentUserAvailable'))\n    }\n\n    static async logout(): Promise<void> {\n        await Caches.clear()\n        await Utils.request('/logout', 'POST')\n        location.reload()\n    }\n\n    static getAccount(): void {\n        Utils.confirm(\n            html` <form>\n                <label>\n                    <span>Identifiant</span>\n                    <input name=\"email\" type=\"email\" value=\"${User.currentUser?.email}\" />\n                </label>\n                <label>\n                    <span>Prénom</span>\n                    <input name=\"firstName\" type=\"text\" value=\"${User.currentUser?.firstName}\" />\n                </label>\n                <label>\n                    <span>Nom</span>\n                    <input name=\"lastName\" type=\"text\" value=\"${User.currentUser?.lastName}\" />\n                </label>\n                <label>\n                    <span>Mot de passe</span>\n                    <input name=\"password\" type=\"password\" />\n                </label>\n            </form>`,\n            async (): Promise<void> => {\n                const accountEntries = Object.fromEntries(new FormData(document.querySelector('sc-confirm form') as HTMLFormElement).entries())\n                const userRequest: { setUser: Record<string, string> } = { setUser: {} }\n                if (accountEntries['password']) {\n                    userRequest.setUser['password'] = accountEntries['password'] as string\n                }\n                for (const key of Object.keys(this.currentUser!)) {\n                    if (key !== '_id' && this.currentUser![key as keyof typeof this.currentUser] !== accountEntries[key]) {\n                        userRequest.setUser[key] = accountEntries[key] as string\n                    }\n                }\n                if (Object.keys(userRequest.setUser).length > 0) {\n                    userRequest.setUser['_id'] = this.currentUser!._id\n                    this.currentUser = (await Utils.request('/db', 'POST', { body: JSON.stringify(userRequest) })) as TUser\n                    document.body.dispatchEvent(new CustomEvent('currentUserUpdated'))\n                }\n            },\n            (): void => {}\n        )\n    }\n}\n","import { html, render } from 'lit'\nimport { User } from '../classes/user.js'\n\nexport default class LoggedUser extends HTMLElement {\n    async connectedCallback(): Promise<void> {\n\t\t// TODO menu doit etre présent si pas de logged user\n        await User.getCurrentUser()\n        if (!User.currentUser) return\n        this.render()\n        document.body.addEventListener('currentUserUpdated', (): void => this.render())\n    }\n\n    private render(): void {\n        render(\n            html` <details class=\"dropdown\">\n                <summary>${User.currentUser?.firstName} ${User.currentUser?.lastName}</summary>\n                <ul>\n                    <li>\n                        <button @click=\"${(): void => User.getAccount()}\" role=\"link\" href=\"#\">Compte</button>\n                    </li>\n                    <li>\n                        <button @click=\"${(): Promise<void> => User.logout()}\" role=\"link\">Se déconnecter</button>\n                    </li>\n                </ul>\n            </details>`,\n            this\n        )\n    }\n}\n","import { html, render } from 'lit'\nimport { Utils } from '../classes/utils.js'\nimport { TValidateReturn } from '../types.js'\n\nexport default class ResetPassword extends HTMLElement {\n    async connectedCallback(): Promise<void> {\n        document.body.addEventListener('currentUserAvailable', async (): Promise<void> => {\n            location.href = 'app'\n        })\n        this.render()\n        this.setFormListener()\n    }\n\n    private setFormListener(): void {\n        const form = this.querySelector('form')\n        form?.addEventListener('submit', async (pEvent): Promise<void> => {\n            pEvent.preventDefault()\n            const entries = Object.fromEntries(new FormData(form).entries())\n            entries['token'] = location.search.split('=')[1]\n            const result = (await Utils.request('/resetPassword', 'POST', { body: JSON.stringify(entries) })) as TValidateReturn\n            if (result.success) {\n                // TODO Toast à améliorer ? Pour permettre une réponse après sans setTimeout ?\n                Utils.toast('success', result.message as string)\n                setTimeout((): void => {\n                    location.href = '/'\n                }, 4225)\n            } else Utils.toast('error', result.message as string)\n        })\n    }\n\n    private render(): void {\n        render(\n            html`\n                <form>\n                    <label>\n                        <span>Nouveau mot de passe</span>\n                        <input name=\"password\" required type=\"password\" />\n                    </label>\n                    <button type=\"submit\">\n                        <span>Envoyer</span>\n                    </button>\n                </form>\n            `,\n            this\n        )\n    }\n}\n","import '@picocss/pico'\nimport '../styles/main.css'\nimport Toast from './components/toast.js'\nimport Propose from './components/propose.js'\nimport { Utils } from './classes/utils.js'\nimport Confirm from './components/confirm.js'\nimport Recipes from './components/recipes.js'\nimport Ingredients from './components/ingredients.js'\nimport Recipe from './components/recipe.js'\nimport Lists from './components/lists.js'\nimport Header from './components/header.js'\nimport Login from './components/login.js'\nimport Categories from './components/categories.js'\nimport AnimatedSection from './components/animatedSection.js'\nimport Loader from './components/loader.js'\nimport LoadingBlock from './components/loadingBlock.js'\nimport Dishes from './components/dishes.js'\nimport Link from './components/link.js'\nimport { Websocket } from './classes/websocket.js'\nimport Menu from './components/menu.js'\nimport Register from './components/register.js'\nimport LoggedUser from './components/loggedUser.js'\nimport ResetPassword from './components/resetPassword.js'\n\nclass App {\n    // TODO images pour la page de home\n    // TODO Liste de ce qui est présent dans le congelé\n    // TODO Choix pour activer les fonctionnalités\n    // TODO permettre de rendre payant\n    // TODO minifier et combiner les fichiers js clients dans app.js\n    // TODO Si possible de plus minifier\n    // TODO revoir la conf qua pour faire en sorte de modifier aussi l'appel vers le min.js dans page.html\n    // TODO Mise en place de test auto ?\n    // TODO home à passer sur mobile\n    // TODO ne pas tester l'auth à chaque connection !!! -> Possible que le problème soit réglé\n    // TODO Documenter les fonctions !!!\n    // TODO repasser sur les recettes\n    // TODO améliorer les focus sur les input et voir si possible de trouver mieux pour le mobile après utilisation\n    // TODO erreur sur le tableau dishes si texte trop long\n    // TODO gérer le tab pour passer d'un input à l'autre sur size unit ...\n\n    constructor() {\n        Utils.helpers()\n        // TODO à remettre ?\n        // this.wakeLock()\n        Websocket.init()\n        if (location.href.charAt(location.href.length - 1) === '/') history.replaceState({}, '', location.href.replace(/\\/$/, ''))\n    }\n\n    async wakeLock(): Promise<void> {\n        let wakeLock: WakeLockSentinel | null = null\n        const requestWakeLock = async (): Promise<void> => {\n            try {\n                wakeLock = await navigator.wakeLock.request()\n            } catch (e) {\n                if (e instanceof Error) {\n                    console.error(`${e.name}, ${e.message}`)\n                }\n            }\n        }\n        document.addEventListener('visibilitychange', async (): Promise<void> => {\n            if (wakeLock !== null && document.visibilityState === 'visible') {\n                await requestWakeLock()\n            }\n        })\n        await requestWakeLock()\n    }\n}\n\nnew App()\ncustomElements.define('sc-loader', Loader)\ncustomElements.define('sc-header', Header)\ncustomElements.define('sc-toast', Toast)\ncustomElements.define('sc-confirm', Confirm)\ncustomElements.define('sc-propose', Propose)\ncustomElements.define('sc-recipes', Recipes)\ncustomElements.define('sc-recipe', Recipe)\ncustomElements.define('sc-lists', Lists)\ncustomElements.define('sc-ingredients', Ingredients)\ncustomElements.define('sc-categories', Categories)\ncustomElements.define('sc-login', Login)\ncustomElements.define('sc-signup', Register)\ncustomElements.define('sc-loading-block', LoadingBlock)\ncustomElements.define('sc-animated-section', AnimatedSection)\ncustomElements.define('sc-dishes', Dishes)\ncustomElements.define('sc-link', Link)\ncustomElements.define('sc-menu', Menu)\ncustomElements.define('sc-logged-user', LoggedUser)\ncustomElements.define('sc-reset-password', ResetPassword)\n"],"names":["t","e","s","o","n$2","r","n","S","c","i","h","a","l","p","d","u","f","y","b","v","m","_","w","lt","st","g","$","x","T","E","k","O","j","M","P","ke","R","D","V","N","U","B","Y","Z","q","G","z","F","et","K","Re","Q","Toast","pValue","name","oldValue","newValue","render","html","Propose","pText","input","list","pEntry","pEvent","keyboardEvent","link","Dom","element","classes","svg","use","value","text","eventName","listener","instanceOfAny","object","constructors","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","getCursorAdvanceMethods","transactionDoneMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","resolve","reject","unlisten","success","error","wrap","cacheDonePromiseForTransaction","tx","done","complete","idbProxyTraps","target","prop","receiver","replaceTraps","callback","wrapFunction","func","args","unwrap","transformCachableValue","openDB","version","blocked","upgrade","blocking","terminated","openPromise","event","db","deleteDB","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","method","storeName","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","proxiedCursor","isIteratorProp","indexedDBCaches","Caches","forceIndexedDb","maxStorageSize","storage","key","datas","arg","dbName","Utils","confirmMessage","cbConfirm","cbCancel","isConfirmInit","loaderVisible","confirm","cancel","visible","message","type","pUrl","pMethod","pOptions","pReturnType","response","fragment","mouseX","mouseY","pFile","reader","pStr","pName","formData","Confirm","Recipes","recipes","pRecipe","choices","pChoice","detail","pIngredient","pIndex","Ingredients","id","title","ingredientId","ingredientTitle","selectedCategoryId","categoryId","category","pCategory","Commons","ingredient","isReset","pCb","Recipe","splitUrl","form","plainFormData","ingredients","pIngredients","pKey","splitKey","parent","sizeInput","unitSelect","parents","coords","siblings","animations","intersections","intervals","options","debounces","enabled","root","scrollX","scrollY","TGT","DEL","NEW","handleMutations","mutations","elements","getElements","el","animate","handleResizes","entries","entry","updateAllPos","updatePos","observePosition","oldObserver","rect","invocations","buffer","getCoords","offsetWidth","offsetHeight","rootMargin","px","observer","optionsOrPlugin","getOptions","delay","isPlugin","currentAnimation","forEach","lowPriority","poll","resize","supportedBrowser","nodes","mutation","node","child","_a","isMounted","preExisting","add","remain","remove","raw","str","getScrollOffset","getTransitionSizes","oldCoords","newCoords","widthFrom","heightFrom","widthTo","heightTo","styles","paddingY","paddingX","getTarget","isEnabled","callbacks","getPluginTuple","pluginReturn","config","animation","pluginOrOptions","deltaX","deltaY","start","end","keyframes","cleanUp","style","prev","next","finalX","finalY","top","left","width","height","deletePosition","adjustScroll","styleReset","scrollDeltaX","scrollDeltaY","scrollBefore","lastHeight","lastWidth","startScroll","smoothScroll","offsetParent","parentStyles","parentCoords","autoAnimate","Websocket","onClientsMessage","onOpenMessage","Lists","cacheResponse","ordered","newIngredients","recipe","pRecipeId","listIngredient","ingredientSize","ingredientUnit","isIngredientOrdered","pOrderedIngredient","getCategoryTitle","pCategoryId","ingredientsByCategory","group","Header","image","Login","result","Categories","choiceMode","categoryTitle","AnimatedSection","pGroup","pChild","pAttribute","values","children","containerRect","selfRect","offTop","viewHeight","proportion","pAnimations","Loader","LoadingBlock","Dishes","dish","isEdit","listIngredients","pDay","pTime","pDays","Link","REPLACEZONE","pFragment","Menu","pLink","Register","User","user","accountEntries","userRequest","LoggedUser","ResetPassword","App","wakeLock","requestWakeLock"],"mappings":"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","x_google_ignoreList":[0,1,2,3,7,15]}